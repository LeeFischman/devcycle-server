2013-11-03 22:35:14,151 [DEBUG] django.db.backends: (0.002) 
            SELECT c.relname
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('r', 'v', '')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid); args=()
2013-11-03 22:35:14,183 [DEBUG] django.db.backends: (0.031) CREATE TABLE "auth_permission" (
    "id" serial NOT NULL PRIMARY KEY,
    "name" varchar(50) NOT NULL,
    "content_type_id" integer NOT NULL,
    "codename" varchar(100) NOT NULL,
    UNIQUE ("content_type_id", "codename")
)
;; args=()
2013-11-03 22:35:14,193 [DEBUG] django.db.backends: (0.009) CREATE TABLE "auth_group_permissions" (
    "id" serial NOT NULL PRIMARY KEY,
    "group_id" integer NOT NULL,
    "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED,
    UNIQUE ("group_id", "permission_id")
)
;; args=()
2013-11-03 22:35:14,200 [DEBUG] django.db.backends: (0.007) CREATE TABLE "auth_group" (
    "id" serial NOT NULL PRIMARY KEY,
    "name" varchar(80) NOT NULL UNIQUE
)
;; args=()
2013-11-03 22:35:14,201 [DEBUG] django.db.backends: (0.001) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "group_id_refs_id_f4b32aac" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED;; args=()
2013-11-03 22:35:14,208 [DEBUG] django.db.backends: (0.006) CREATE TABLE "auth_user_groups" (
    "id" serial NOT NULL PRIMARY KEY,
    "user_id" integer NOT NULL,
    "group_id" integer NOT NULL REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED,
    UNIQUE ("user_id", "group_id")
)
;; args=()
2013-11-03 22:35:14,215 [DEBUG] django.db.backends: (0.007) CREATE TABLE "auth_user_user_permissions" (
    "id" serial NOT NULL PRIMARY KEY,
    "user_id" integer NOT NULL,
    "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED,
    UNIQUE ("user_id", "permission_id")
)
;; args=()
2013-11-03 22:35:14,223 [DEBUG] django.db.backends: (0.007) CREATE TABLE "auth_user" (
    "id" serial NOT NULL PRIMARY KEY,
    "password" varchar(128) NOT NULL,
    "last_login" timestamp with time zone NOT NULL,
    "is_superuser" boolean NOT NULL,
    "username" varchar(30) NOT NULL UNIQUE,
    "first_name" varchar(30) NOT NULL,
    "last_name" varchar(30) NOT NULL,
    "email" varchar(75) NOT NULL,
    "is_staff" boolean NOT NULL,
    "is_active" boolean NOT NULL,
    "date_joined" timestamp with time zone NOT NULL
)
;; args=()
2013-11-03 22:35:14,224 [DEBUG] django.db.backends: (0.001) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "user_id_refs_id_40c41112" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED;; args=()
2013-11-03 22:35:14,225 [DEBUG] django.db.backends: (0.001) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "user_id_refs_id_4dc23c39" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED;; args=()
2013-11-03 22:35:14,231 [DEBUG] django.db.backends: (0.006) CREATE TABLE "django_content_type" (
    "id" serial NOT NULL PRIMARY KEY,
    "name" varchar(100) NOT NULL,
    "app_label" varchar(100) NOT NULL,
    "model" varchar(100) NOT NULL,
    UNIQUE ("app_label", "model")
)
;; args=()
2013-11-03 22:35:14,232 [DEBUG] django.db.backends: (0.001) ALTER TABLE "auth_permission" ADD CONSTRAINT "content_type_id_refs_id_d043b34a" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED;; args=()
2013-11-03 22:35:14,237 [DEBUG] django.db.backends: (0.005) CREATE TABLE "django_session" (
    "session_key" varchar(40) NOT NULL PRIMARY KEY,
    "session_data" text NOT NULL,
    "expire_date" timestamp with time zone NOT NULL
)
;; args=()
2013-11-03 22:35:14,253 [DEBUG] django.db.backends: (0.016) CREATE TABLE "django_site" (
    "id" serial NOT NULL PRIMARY KEY,
    "domain" varchar(100) NOT NULL,
    "name" varchar(50) NOT NULL
)
;; args=()
2013-11-03 22:35:14,265 [DEBUG] django.db.backends: (0.012) CREATE TABLE "south_migrationhistory" (
    "id" serial NOT NULL PRIMARY KEY,
    "app_name" varchar(255) NOT NULL,
    "migration" varchar(255) NOT NULL,
    "applied" timestamp with time zone NOT NULL
)
;; args=()
2013-11-03 22:35:14,276 [DEBUG] django.db.backends: (0.010) CREATE TABLE "django_admin_log" (
    "id" serial NOT NULL PRIMARY KEY,
    "action_time" timestamp with time zone NOT NULL,
    "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED,
    "content_type_id" integer REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED,
    "object_id" text,
    "object_repr" varchar(200) NOT NULL,
    "action_flag" smallint CHECK ("action_flag" >= 0) NOT NULL,
    "change_message" text NOT NULL
)
;; args=()
2013-11-03 22:35:14,280 [DEBUG] django.db.backends: (0.001) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'permission'  AND "django_content_type"."app_label" = 'auth' ); args=('permission', u'auth')
2013-11-03 22:35:14,312 [DEBUG] django.db.backends: (0.000) SAVEPOINT s1221874944_x1; args=()
2013-11-03 22:35:14,313 [DEBUG] django.db.backends: (0.001) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('permission', 'auth', 'permission') RETURNING "django_content_type"."id"; args=(u'permission', u'auth', 'permission')
2013-11-03 22:35:14,317 [DEBUG] django.db.backends: (0.001) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'group'  AND "django_content_type"."app_label" = 'auth' ); args=('group', u'auth')
2013-11-03 22:35:14,317 [DEBUG] django.db.backends: (0.000) SAVEPOINT s1221874944_x1; args=()
2013-11-03 22:35:14,318 [DEBUG] django.db.backends: (0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('group', 'auth', 'group') RETURNING "django_content_type"."id"; args=(u'group', u'auth', 'group')
2013-11-03 22:35:14,322 [DEBUG] django.db.backends: (0.001) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'user'  AND "django_content_type"."app_label" = 'auth' ); args=('user', u'auth')
2013-11-03 22:35:14,323 [DEBUG] django.db.backends: (0.000) SAVEPOINT s1221874944_x1; args=()
2013-11-03 22:35:14,323 [DEBUG] django.db.backends: (0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('user', 'auth', 'user') RETURNING "django_content_type"."id"; args=(u'user', u'auth', 'user')
2013-11-03 22:35:14,326 [DEBUG] django.db.backends: (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1, 2, 3) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1, 2, 3)
2013-11-03 22:35:14,327 [DEBUG] django.db.backends: (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add permission', 1, 'add_permission'), ('Can change permission', 1, 'change_permission'), ('Can delete permission', 1, 'delete_permission'), ('Can add group', 2, 'add_group'), ('Can change group', 2, 'change_group'), ('Can delete group', 2, 'delete_group'), ('Can add user', 3, 'add_user'), ('Can change user', 3, 'change_user'), ('Can delete user', 3, 'delete_user'); args=(u'Can add permission', 1, u'add_permission', u'Can change permission', 1, u'change_permission', u'Can delete permission', 1, u'delete_permission', u'Can add group', 2, u'add_group', u'Can change group', 2, u'change_group', u'Can delete group', 2, u'delete_group', u'Can add user', 3, u'add_user', u'Can change user', 3, u'change_user', u'Can delete user', 3, u'delete_user')
2013-11-03 22:35:24,376 [DEBUG] django.db.backends: (0.001) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'root' ; args=(u'root',)
2013-11-03 22:35:32,502 [DEBUG] django.db.backends: (0.001) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'root' ; args=('root',)
2013-11-03 22:35:39,329 [DEBUG] django.db.backends: (0.001) INSERT INTO "auth_user" ("password", "last_login", "is_superuser", "username", "first_name", "last_name", "email", "is_staff", "is_active", "date_joined") VALUES ('pbkdf2_sha256$10000$IpWBih7Snj1r$iGBns3IVS5QxgiqA24OHjq9MScsLE36HBDS+KYQqzYI=', '2013-11-04 03:35:39.288320+00:00', false, 'root', '', '', '', false, true, '2013-11-04 03:35:39.288320+00:00') RETURNING "auth_user"."id"; args=(u'pbkdf2_sha256$10000$IpWBih7Snj1r$iGBns3IVS5QxgiqA24OHjq9MScsLE36HBDS+KYQqzYI=', u'2013-11-04 03:35:39.288320+00:00', False, 'root', u'', u'', u'', False, True, u'2013-11-04 03:35:39.288320+00:00')
2013-11-03 22:35:39,331 [DEBUG] django.db.backends: (0.000) SELECT (1) AS "a" FROM "auth_user" WHERE "auth_user"."id" = 1  LIMIT 1; args=(1,)
2013-11-03 22:35:39,332 [DEBUG] django.db.backends: (0.000) UPDATE "auth_user" SET "password" = 'pbkdf2_sha256$10000$IpWBih7Snj1r$iGBns3IVS5QxgiqA24OHjq9MScsLE36HBDS+KYQqzYI=', "last_login" = '2013-11-04 03:35:39.288320+00:00', "is_superuser" = true, "username" = 'root', "first_name" = '', "last_name" = '', "email" = '', "is_staff" = true, "is_active" = true, "date_joined" = '2013-11-04 03:35:39.288320+00:00' WHERE "auth_user"."id" = 1 ; args=(u'pbkdf2_sha256$10000$IpWBih7Snj1r$iGBns3IVS5QxgiqA24OHjq9MScsLE36HBDS+KYQqzYI=', u'2013-11-04 03:35:39.288320+00:00', True, 'root', u'', u'', u'', True, True, u'2013-11-04 03:35:39.288320+00:00', 1)
2013-11-03 22:35:39,334 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'  ORDER BY "django_content_type"."name" ASC; args=(u'auth',)
2013-11-03 22:35:39,335 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'contenttype'  AND "django_content_type"."app_label" = 'contenttypes' ); args=('contenttype', u'contenttypes')
2013-11-03 22:35:39,336 [DEBUG] django.db.backends: (0.000) SAVEPOINT s1221874944_x1; args=()
2013-11-03 22:35:39,336 [DEBUG] django.db.backends: (0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('content type', 'contenttypes', 'contenttype') RETURNING "django_content_type"."id"; args=(u'content type', u'contenttypes', 'contenttype')
2013-11-03 22:35:39,338 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(4,)
2013-11-03 22:35:39,339 [DEBUG] django.db.backends: (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add content type', 4, 'add_contenttype'), ('Can change content type', 4, 'change_contenttype'), ('Can delete content type', 4, 'delete_contenttype'); args=(u'Can add content type', 4, u'add_contenttype', u'Can change content type', 4, u'change_contenttype', u'Can delete content type', 4, u'delete_contenttype')
2013-11-03 22:35:39,340 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'  ORDER BY "django_content_type"."name" ASC; args=(u'contenttypes',)
2013-11-03 22:35:39,341 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'session'  AND "django_content_type"."app_label" = 'sessions' ); args=('session', u'sessions')
2013-11-03 22:35:39,342 [DEBUG] django.db.backends: (0.000) SAVEPOINT s1221874944_x1; args=()
2013-11-03 22:35:39,342 [DEBUG] django.db.backends: (0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('session', 'sessions', 'session') RETURNING "django_content_type"."id"; args=(u'session', u'sessions', 'session')
2013-11-03 22:35:39,344 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,)
2013-11-03 22:35:39,345 [DEBUG] django.db.backends: (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add session', 5, 'add_session'), ('Can change session', 5, 'change_session'), ('Can delete session', 5, 'delete_session'); args=(u'Can add session', 5, u'add_session', u'Can change session', 5, u'change_session', u'Can delete session', 5, u'delete_session')
2013-11-03 22:35:39,346 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'  ORDER BY "django_content_type"."name" ASC; args=(u'sessions',)
2013-11-03 22:35:39,347 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'site'  AND "django_content_type"."app_label" = 'sites' ); args=('site', u'sites')
2013-11-03 22:35:39,348 [DEBUG] django.db.backends: (0.000) SAVEPOINT s1221874944_x1; args=()
2013-11-03 22:35:39,348 [DEBUG] django.db.backends: (0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('site', 'sites', 'site') RETURNING "django_content_type"."id"; args=(u'site', u'sites', 'site')
2013-11-03 22:35:39,350 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,)
2013-11-03 22:35:39,351 [DEBUG] django.db.backends: (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add site', 6, 'add_site'), ('Can change site', 6, 'change_site'), ('Can delete site', 6, 'delete_site'); args=(u'Can add site', 6, u'add_site', u'Can change site', 6, u'change_site', u'Can delete site', 6, u'delete_site')
2013-11-03 22:35:39,352 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sites'  ORDER BY "django_content_type"."name" ASC; args=(u'sites',)
2013-11-03 22:35:39,354 [DEBUG] django.db.backends: (0.000) SELECT (1) AS "a" FROM "django_site" WHERE "django_site"."id" = 1  LIMIT 1; args=(1,)
2013-11-03 22:35:39,354 [DEBUG] django.db.backends: (0.000) INSERT INTO "django_site" ("id", "domain", "name") VALUES (1, 'example.com', 'example.com'); args=(1, 'example.com', 'example.com')
2013-11-03 22:35:39,356 [DEBUG] django.db.backends: (0.001) SELECT setval(pg_get_serial_sequence('"django_site"','id'), coalesce(max("id"), 1), max("id") IS NOT null) FROM "django_site";; args=()
2013-11-03 22:35:39,359 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'migrationhistory'  AND "django_content_type"."app_label" = 'south' ); args=('migrationhistory', u'south')
2013-11-03 22:35:39,359 [DEBUG] django.db.backends: (0.000) SAVEPOINT s1221874944_x1; args=()
2013-11-03 22:35:39,360 [DEBUG] django.db.backends: (0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('migration history', 'south', 'migrationhistory') RETURNING "django_content_type"."id"; args=(u'migration history', u'south', 'migrationhistory')
2013-11-03 22:35:39,362 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(7,)
2013-11-03 22:35:39,362 [DEBUG] django.db.backends: (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add migration history', 7, 'add_migrationhistory'), ('Can change migration history', 7, 'change_migrationhistory'), ('Can delete migration history', 7, 'delete_migrationhistory'); args=(u'Can add migration history', 7, u'add_migrationhistory', u'Can change migration history', 7, u'change_migrationhistory', u'Can delete migration history', 7, u'delete_migrationhistory')
2013-11-03 22:35:39,364 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'south'  ORDER BY "django_content_type"."name" ASC; args=(u'south',)
2013-11-03 22:35:39,365 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'logentry'  AND "django_content_type"."app_label" = 'admin' ); args=('logentry', u'admin')
2013-11-03 22:35:39,365 [DEBUG] django.db.backends: (0.000) SAVEPOINT s1221874944_x1; args=()
2013-11-03 22:35:39,366 [DEBUG] django.db.backends: (0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('log entry', 'admin', 'logentry') RETURNING "django_content_type"."id"; args=(u'log entry', u'admin', 'logentry')
2013-11-03 22:35:39,368 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8,)
2013-11-03 22:35:39,368 [DEBUG] django.db.backends: (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add log entry', 8, 'add_logentry'), ('Can change log entry', 8, 'change_logentry'), ('Can delete log entry', 8, 'delete_logentry'); args=(u'Can add log entry', 8, u'add_logentry', u'Can change log entry', 8, u'change_logentry', u'Can delete log entry', 8, u'delete_logentry')
2013-11-03 22:35:39,370 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'  ORDER BY "django_content_type"."name" ASC; args=(u'admin',)
2013-11-03 22:35:39,374 [DEBUG] django.db.backends: (0.003) CREATE INDEX "auth_permission_content_type_id" ON "auth_permission" ("content_type_id");; args=()
2013-11-03 22:35:39,377 [DEBUG] django.db.backends: (0.002) CREATE INDEX "auth_group_permissions_group_id" ON "auth_group_permissions" ("group_id");; args=()
2013-11-03 22:35:39,380 [DEBUG] django.db.backends: (0.002) CREATE INDEX "auth_group_permissions_permission_id" ON "auth_group_permissions" ("permission_id");; args=()
2013-11-03 22:35:39,383 [DEBUG] django.db.backends: (0.002) CREATE INDEX "auth_group_name_like" ON "auth_group" ("name" varchar_pattern_ops);; args=()
2013-11-03 22:35:39,386 [DEBUG] django.db.backends: (0.003) CREATE INDEX "auth_user_groups_user_id" ON "auth_user_groups" ("user_id");; args=()
2013-11-03 22:35:39,389 [DEBUG] django.db.backends: (0.002) CREATE INDEX "auth_user_groups_group_id" ON "auth_user_groups" ("group_id");; args=()
2013-11-03 22:35:39,393 [DEBUG] django.db.backends: (0.003) CREATE INDEX "auth_user_user_permissions_user_id" ON "auth_user_user_permissions" ("user_id");; args=()
2013-11-03 22:35:39,395 [DEBUG] django.db.backends: (0.002) CREATE INDEX "auth_user_user_permissions_permission_id" ON "auth_user_user_permissions" ("permission_id");; args=()
2013-11-03 22:35:39,665 [DEBUG] django.db.backends: (0.018) CREATE INDEX "auth_user_username_like" ON "auth_user" ("username" varchar_pattern_ops);; args=()
2013-11-03 22:35:39,669 [DEBUG] django.db.backends: (0.003) CREATE INDEX "django_session_session_key_like" ON "django_session" ("session_key" varchar_pattern_ops);; args=()
2013-11-03 22:35:39,672 [DEBUG] django.db.backends: (0.003) CREATE INDEX "django_session_expire_date" ON "django_session" ("expire_date");; args=()
2013-11-03 22:35:39,677 [DEBUG] django.db.backends: (0.003) CREATE INDEX "django_admin_log_user_id" ON "django_admin_log" ("user_id");; args=()
2013-11-03 22:35:39,680 [DEBUG] django.db.backends: (0.003) CREATE INDEX "django_admin_log_content_type_id" ON "django_admin_log" ("content_type_id");; args=()
2013-11-03 22:35:39,776 [DEBUG] django.db.backends: (0.000) SET CONSTRAINTS ALL IMMEDIATE; args=()
2013-11-03 22:35:39,776 [DEBUG] django.db.backends: (0.000) SET CONSTRAINTS ALL DEFERRED; args=()
2013-11-03 22:37:13,258 [DEBUG] django.db.backends: (0.003) 
            SELECT c.relname
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('r', 'v', '')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid); args=()
2013-11-03 22:37:13,263 [DEBUG] django.db.backends: (0.001) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'permission'  AND "django_content_type"."app_label" = 'auth' ); args=('permission', u'auth')
2013-11-03 22:37:13,264 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'group'  AND "django_content_type"."app_label" = 'auth' ); args=('group', u'auth')
2013-11-03 22:37:13,265 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'user'  AND "django_content_type"."app_label" = 'auth' ); args=('user', u'auth')
2013-11-03 22:37:13,266 [DEBUG] django.db.backends: (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1, 2, 3) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1, 2, 3)
2013-11-03 22:37:13,267 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'  ORDER BY "django_content_type"."name" ASC; args=(u'auth',)
2013-11-03 22:37:13,269 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'contenttype'  AND "django_content_type"."app_label" = 'contenttypes' ); args=('contenttype', u'contenttypes')
2013-11-03 22:37:13,270 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(4,)
2013-11-03 22:37:13,271 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'  ORDER BY "django_content_type"."name" ASC; args=(u'contenttypes',)
2013-11-03 22:37:13,272 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'session'  AND "django_content_type"."app_label" = 'sessions' ); args=('session', u'sessions')
2013-11-03 22:37:13,273 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,)
2013-11-03 22:37:13,274 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'  ORDER BY "django_content_type"."name" ASC; args=(u'sessions',)
2013-11-03 22:37:13,275 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'site'  AND "django_content_type"."app_label" = 'sites' ); args=('site', u'sites')
2013-11-03 22:37:13,276 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,)
2013-11-03 22:37:13,277 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sites'  ORDER BY "django_content_type"."name" ASC; args=(u'sites',)
2013-11-03 22:37:13,280 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'migrationhistory'  AND "django_content_type"."app_label" = 'south' ); args=('migrationhistory', u'south')
2013-11-03 22:37:13,281 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(7,)
2013-11-03 22:37:13,282 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'south'  ORDER BY "django_content_type"."name" ASC; args=(u'south',)
2013-11-03 22:37:13,283 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'logentry'  AND "django_content_type"."app_label" = 'admin' ); args=('logentry', u'admin')
2013-11-03 22:37:13,285 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8,)
2013-11-03 22:37:13,285 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'  ORDER BY "django_content_type"."name" ASC; args=(u'admin',)
2013-11-03 22:37:13,292 [DEBUG] django.db.backends: (0.000) SET CONSTRAINTS ALL IMMEDIATE; args=()
2013-11-03 22:37:13,293 [DEBUG] django.db.backends: (0.000) SET CONSTRAINTS ALL DEFERRED; args=()
2013-11-03 22:41:09,578 [DEBUG] django.db.backends: (0.001) SELECT "south_migrationhistory"."id", "south_migrationhistory"."app_name", "south_migrationhistory"."migration", "south_migrationhistory"."applied" FROM "south_migrationhistory" WHERE "south_migrationhistory"."applied" IS NOT NULL ORDER BY "south_migrationhistory"."applied" ASC; args=()
2013-11-03 22:41:09,582 [DEBUG] django.db.backends: (0.001) CREATE TABLE DDL_TRANSACTION_TEST (X INT); args=()
2013-11-03 22:41:09,583 [DEBUG] django.db.backends: (0.000) CREATE TABLE DDL_TRANSACTION_TEST (X INT); args=()
2013-11-03 22:41:09,616 [DEBUG] django.db.backends: (0.033) DROP TABLE DDL_TRANSACTION_TEST; args=()
2013-11-03 22:41:09,620 [DEBUG] south: execute "CREATE TABLE "rider_rider" ("id" serial NOT NULL PRIMARY KEY, "os" varchar(125) NULL, "start_time" bigint NULL, "push_id" varchar(512) NULL, "registered_at" timestamp with time zone NOT NULL);" with params "[]"
2013-11-03 22:41:09,630 [DEBUG] django.db.backends: (0.010) CREATE TABLE "rider_rider" ("id" serial NOT NULL PRIMARY KEY, "os" varchar(125) NULL, "start_time" bigint NULL, "push_id" varchar(512) NULL, "registered_at" timestamp with time zone NOT NULL);; args=[]
2013-11-03 22:41:09,634 [DEBUG] django.db.backends: (0.001) SELECT "south_migrationhistory"."id", "south_migrationhistory"."app_name", "south_migrationhistory"."migration", "south_migrationhistory"."applied" FROM "south_migrationhistory" WHERE ("south_migrationhistory"."app_name" = 'rider'  AND "south_migrationhistory"."migration" = '0001_initial' ); args=('rider', '0001_initial')
2013-11-03 22:41:09,636 [DEBUG] django.db.backends: (0.001) INSERT INTO "south_migrationhistory" ("app_name", "migration", "applied") VALUES ('rider', '0001_initial', '2013-11-04 03:41:09.635335+00:00') RETURNING "south_migrationhistory"."id"; args=('rider', '0001_initial', u'2013-11-04 03:41:09.635335+00:00')
2013-11-03 22:41:09,639 [DEBUG] django.db.backends: (0.001) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'rider'  AND "django_content_type"."app_label" = 'rider' ); args=('rider', u'rider')
2013-11-03 22:41:09,639 [DEBUG] django.db.backends: (0.000) SAVEPOINT s1221375232_x1; args=()
2013-11-03 22:41:09,640 [DEBUG] django.db.backends: (0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('rider', 'rider', 'rider') RETURNING "django_content_type"."id"; args=(u'rider', u'rider', 'rider')
2013-11-03 22:41:09,644 [DEBUG] django.db.backends: (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (9) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(9,)
2013-11-03 22:41:09,644 [DEBUG] django.db.backends: (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add rider', 9, 'add_rider'), ('Can change rider', 9, 'change_rider'), ('Can delete rider', 9, 'delete_rider'); args=(u'Can add rider', 9, u'add_rider', u'Can change rider', 9, u'change_rider', u'Can delete rider', 9, u'delete_rider')
2013-11-03 22:41:09,646 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'rider'  ORDER BY "django_content_type"."name" ASC; args=(u'rider',)
2013-11-03 22:41:09,653 [DEBUG] django.db.backends: (0.000) SET CONSTRAINTS ALL IMMEDIATE; args=()
2013-11-03 22:41:09,653 [DEBUG] django.db.backends: (0.000) SET CONSTRAINTS ALL DEFERRED; args=()
2013-11-03 22:41:09,677 [DEBUG] django.db.backends: (0.001) SELECT "south_migrationhistory"."id", "south_migrationhistory"."app_name", "south_migrationhistory"."migration", "south_migrationhistory"."applied" FROM "south_migrationhistory" WHERE "south_migrationhistory"."applied" IS NOT NULL ORDER BY "south_migrationhistory"."applied" ASC; args=()
2013-11-03 22:41:09,681 [DEBUG] south: execute "CREATE TABLE "location_update_location" ("id" serial NOT NULL PRIMARY KEY, "speed" double precision NULL, "time" bigint NOT NULL, "accuracy" double precision NULL, "rider_id" integer NOT NULL, "battery" double precision NULL, "provider" varchar(50) NOT NULL, "bearing" double precision NULL);" with params "[]"
2013-11-03 22:41:09,691 [DEBUG] django.db.backends: (0.010) CREATE TABLE "location_update_location" ("id" serial NOT NULL PRIMARY KEY, "speed" double precision NULL, "time" bigint NOT NULL, "accuracy" double precision NULL, "rider_id" integer NOT NULL, "battery" double precision NULL, "provider" varchar(50) NOT NULL, "bearing" double precision NULL);; args=[]
2013-11-03 22:41:09,691 [DEBUG] south: execute "SELECT AddGeometryColumn('location_update_location', 'coords', 4326, 'POINT', 2);" with params "[]"
2013-11-03 22:41:09,718 [DEBUG] django.db.backends: (0.027) SELECT AddGeometryColumn('location_update_location', 'coords', 4326, 'POINT', 2);; args=[]
2013-11-03 22:41:09,719 [DEBUG] south: execute "ALTER TABLE "location_update_location" ALTER "coords" SET NOT NULL;" with params "[]"
2013-11-03 22:41:09,719 [DEBUG] django.db.backends: (0.000) ALTER TABLE "location_update_location" ALTER "coords" SET NOT NULL;; args=[]
2013-11-03 22:41:09,719 [DEBUG] south: execute "CREATE INDEX "location_update_location_coords_id" ON "location_update_location" USING GIST ( "coords" GIST_GEOMETRY_OPS );" with params "[]"
2013-11-03 22:41:09,723 [DEBUG] django.db.backends: (0.003) CREATE INDEX "location_update_location_coords_id" ON "location_update_location" USING GIST ( "coords" GIST_GEOMETRY_OPS );; args=[]
2013-11-03 22:41:09,723 [DEBUG] south: execute "ALTER TABLE "location_update_location" ADD CONSTRAINT "rider_id_refs_id_2f706f6a" FOREIGN KEY ("rider_id") REFERENCES "rider_rider" ("id") DEFERRABLE INITIALLY DEFERRED;" with params "[]"
2013-11-03 22:41:09,724 [DEBUG] django.db.backends: (0.001) ALTER TABLE "location_update_location" ADD CONSTRAINT "rider_id_refs_id_2f706f6a" FOREIGN KEY ("rider_id") REFERENCES "rider_rider" ("id") DEFERRABLE INITIALLY DEFERRED;; args=[]
2013-11-03 22:41:09,724 [DEBUG] south: execute "CREATE INDEX "location_update_location_rider_id" ON "location_update_location" ("rider_id");" with params "[]"
2013-11-03 22:41:09,727 [DEBUG] django.db.backends: (0.003) CREATE INDEX "location_update_location_rider_id" ON "location_update_location" ("rider_id");; args=[]
2013-11-03 22:41:09,730 [DEBUG] django.db.backends: (0.000) SELECT "south_migrationhistory"."id", "south_migrationhistory"."app_name", "south_migrationhistory"."migration", "south_migrationhistory"."applied" FROM "south_migrationhistory" WHERE ("south_migrationhistory"."app_name" = 'location_update'  AND "south_migrationhistory"."migration" = '0001_initial' ); args=('location_update', '0001_initial')
2013-11-03 22:41:09,730 [DEBUG] django.db.backends: (0.000) INSERT INTO "south_migrationhistory" ("app_name", "migration", "applied") VALUES ('location_update', '0001_initial', '2013-11-04 03:41:09.730477+00:00') RETURNING "south_migrationhistory"."id"; args=('location_update', '0001_initial', u'2013-11-04 03:41:09.730477+00:00')
2013-11-03 22:41:09,736 [DEBUG] south: execute "ALTER TABLE "location_update_location" ADD COLUMN "tour_id_id" varchar(64) NOT NULL;" with params "[]"
2013-11-03 22:41:09,737 [DEBUG] django.db.backends: (0.000) ALTER TABLE "location_update_location" ADD COLUMN "tour_id_id" varchar(64) NOT NULL;; args=[]
2013-11-03 22:41:09,737 [DEBUG] south: execute "ALTER TABLE "location_update_location" ADD CONSTRAINT "tour_id_id_refs_tour_id_2779d8cc" FOREIGN KEY ("tour_id_id") REFERENCES "tour_config_tourconfig" ("tour_id") DEFERRABLE INITIALLY DEFERRED;" with params "[]"
2013-11-03 22:41:09,737 [DEBUG] django.db.backends: (0.000) ALTER TABLE "location_update_location" ADD CONSTRAINT "tour_id_id_refs_tour_id_2779d8cc" FOREIGN KEY ("tour_id_id") REFERENCES "tour_config_tourconfig" ("tour_id") DEFERRABLE INITIALLY DEFERRED;; args=[]
2013-11-03 22:41:09,739 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'location'  AND "django_content_type"."app_label" = 'location_update' ); args=('location', u'location_update')
2013-11-03 22:41:09,739 [DEBUG] django.db.backends: (0.000) SAVEPOINT s1221375232_x1; args=()
2013-11-03 22:41:09,740 [DEBUG] django.db.backends: (0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('location', 'location_update', 'location') RETURNING "django_content_type"."id"; args=(u'location', u'location_update', 'location')
2013-11-03 22:41:09,742 [DEBUG] django.db.backends: (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (10) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(10,)
2013-11-03 22:41:09,743 [DEBUG] django.db.backends: (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add location', 10, 'add_location'), ('Can change location', 10, 'change_location'), ('Can delete location', 10, 'delete_location'); args=(u'Can add location', 10, u'add_location', u'Can change location', 10, u'change_location', u'Can delete location', 10, u'delete_location')
2013-11-03 22:41:09,745 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'location_update'  ORDER BY "django_content_type"."name" ASC; args=(u'location_update',)
2013-11-03 22:42:14,351 [DEBUG] django.db.backends: (0.003) 
            SELECT c.relname
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('r', 'v', '')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid); args=()
2013-11-03 22:42:14,355 [DEBUG] django.db.backends: (0.001) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'permission'  AND "django_content_type"."app_label" = 'auth' ); args=('permission', u'auth')
2013-11-03 22:42:14,356 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'group'  AND "django_content_type"."app_label" = 'auth' ); args=('group', u'auth')
2013-11-03 22:42:14,357 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'user'  AND "django_content_type"."app_label" = 'auth' ); args=('user', u'auth')
2013-11-03 22:42:14,359 [DEBUG] django.db.backends: (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1, 2, 3) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1, 2, 3)
2013-11-03 22:42:14,360 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'  ORDER BY "django_content_type"."name" ASC; args=(u'auth',)
2013-11-03 22:42:14,361 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'contenttype'  AND "django_content_type"."app_label" = 'contenttypes' ); args=('contenttype', u'contenttypes')
2013-11-03 22:42:14,362 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(4,)
2013-11-03 22:42:14,363 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'  ORDER BY "django_content_type"."name" ASC; args=(u'contenttypes',)
2013-11-03 22:42:14,364 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'session'  AND "django_content_type"."app_label" = 'sessions' ); args=('session', u'sessions')
2013-11-03 22:42:14,365 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,)
2013-11-03 22:42:14,366 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'  ORDER BY "django_content_type"."name" ASC; args=(u'sessions',)
2013-11-03 22:42:14,367 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'site'  AND "django_content_type"."app_label" = 'sites' ); args=('site', u'sites')
2013-11-03 22:42:14,368 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,)
2013-11-03 22:42:14,369 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sites'  ORDER BY "django_content_type"."name" ASC; args=(u'sites',)
2013-11-03 22:42:14,373 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'migrationhistory'  AND "django_content_type"."app_label" = 'south' ); args=('migrationhistory', u'south')
2013-11-03 22:42:14,374 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(7,)
2013-11-03 22:42:14,375 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'south'  ORDER BY "django_content_type"."name" ASC; args=(u'south',)
2013-11-03 22:42:14,376 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'logentry'  AND "django_content_type"."app_label" = 'admin' ); args=('logentry', u'admin')
2013-11-03 22:42:14,377 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8,)
2013-11-03 22:42:14,378 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'  ORDER BY "django_content_type"."name" ASC; args=(u'admin',)
2013-11-03 22:42:14,385 [DEBUG] django.db.backends: (0.000) SET CONSTRAINTS ALL IMMEDIATE; args=()
2013-11-03 22:42:14,385 [DEBUG] django.db.backends: (0.000) SET CONSTRAINTS ALL DEFERRED; args=()
2013-11-03 22:42:24,458 [DEBUG] django.db.backends: (0.001) SELECT "south_migrationhistory"."id", "south_migrationhistory"."app_name", "south_migrationhistory"."migration", "south_migrationhistory"."applied" FROM "south_migrationhistory" WHERE "south_migrationhistory"."applied" IS NOT NULL ORDER BY "south_migrationhistory"."applied" ASC; args=()
2013-11-03 22:42:24,464 [DEBUG] django.db.backends: (0.000) SET CONSTRAINTS ALL IMMEDIATE; args=()
2013-11-03 22:42:24,465 [DEBUG] django.db.backends: (0.000) SET CONSTRAINTS ALL DEFERRED; args=()
2013-11-03 22:42:24,488 [DEBUG] django.db.backends: (0.001) SELECT "south_migrationhistory"."id", "south_migrationhistory"."app_name", "south_migrationhistory"."migration", "south_migrationhistory"."applied" FROM "south_migrationhistory" WHERE "south_migrationhistory"."applied" IS NOT NULL ORDER BY "south_migrationhistory"."applied" ASC; args=()
2013-11-03 22:42:24,496 [DEBUG] django.db.backends: (0.001) CREATE TABLE DDL_TRANSACTION_TEST (X INT); args=()
2013-11-03 22:42:24,497 [DEBUG] django.db.backends: (0.000) CREATE TABLE DDL_TRANSACTION_TEST (X INT); args=()
2013-11-03 22:42:24,497 [DEBUG] django.db.backends: (0.000) DROP TABLE DDL_TRANSACTION_TEST; args=()
2013-11-03 22:42:24,499 [DEBUG] south: execute "ALTER TABLE "location_update_location" ADD COLUMN "tour_id_id" varchar(64) NOT NULL;" with params "[]"
2013-11-03 22:42:24,499 [DEBUG] django.db.backends: (0.000) ALTER TABLE "location_update_location" ADD COLUMN "tour_id_id" varchar(64) NOT NULL;; args=[]
2013-11-03 22:42:24,500 [DEBUG] south: execute "ALTER TABLE "location_update_location" ADD CONSTRAINT "tour_id_id_refs_tour_id_2779d8cc" FOREIGN KEY ("tour_id_id") REFERENCES "tour_config_tourconfig" ("tour_id") DEFERRABLE INITIALLY DEFERRED;" with params "[]"
2013-11-03 22:42:24,500 [DEBUG] django.db.backends: (0.000) ALTER TABLE "location_update_location" ADD CONSTRAINT "tour_id_id_refs_tour_id_2779d8cc" FOREIGN KEY ("tour_id_id") REFERENCES "tour_config_tourconfig" ("tour_id") DEFERRABLE INITIALLY DEFERRED;; args=[]
2013-11-03 22:42:46,009 [DEBUG] django.db.backends: (0.001) SELECT 1 FROM pg_database WHERE datname = 'template_postgis' LIMIT 1;; args=('template_postgis',)
2013-11-03 22:42:46,454 [DEBUG] django.db.backends: (0.444) CREATE DATABASE "test_devcycle" ; args=()
2013-11-03 22:42:46,479 [DEBUG] django.db.backends: (0.000) CREATE EXTENSION postgis; args=()
2013-11-03 22:44:20,182 [DEBUG] django.db.backends: (0.001) SELECT 1 FROM pg_database WHERE datname = 'template_postgis' LIMIT 1;; args=('template_postgis',)
2013-11-03 22:44:20,183 [DEBUG] django.db.backends: (0.000) CREATE DATABASE "test_devcycle" ; args=()
2013-11-03 22:44:33,111 [DEBUG] django.db.backends: (0.144) DROP DATABASE "test_devcycle"; args=()
2013-11-03 22:44:33,442 [DEBUG] django.db.backends: (0.331) CREATE DATABASE "test_devcycle" ; args=()
2013-11-03 22:44:33,468 [DEBUG] django.db.backends: (0.000) CREATE EXTENSION postgis; args=()
2013-11-03 22:44:56,456 [DEBUG] django.db.backends: (0.001) SELECT 1 FROM pg_database WHERE datname = 'template_postgis' LIMIT 1;; args=('template_postgis',)
2013-11-03 22:44:56,457 [DEBUG] django.db.backends: (0.000) CREATE DATABASE "test_devcycle" ; args=()
2013-11-03 22:44:58,762 [DEBUG] django.db.backends: (0.107) DROP DATABASE "test_devcycle"; args=()
2013-11-03 22:44:59,060 [DEBUG] django.db.backends: (0.298) CREATE DATABASE "test_devcycle" ; args=()
2013-11-03 22:44:59,087 [DEBUG] django.db.backends: (0.000) CREATE EXTENSION postgis; args=()
2013-11-03 22:48:12,280 [DEBUG] django.db.backends: (0.001) SELECT "south_migrationhistory"."id", "south_migrationhistory"."app_name", "south_migrationhistory"."migration", "south_migrationhistory"."applied" FROM "south_migrationhistory" WHERE "south_migrationhistory"."applied" IS NOT NULL ORDER BY "south_migrationhistory"."applied" ASC; args=()
2013-11-03 22:48:12,287 [DEBUG] django.db.backends: (0.000) SET CONSTRAINTS ALL IMMEDIATE; args=()
2013-11-03 22:48:12,288 [DEBUG] django.db.backends: (0.000) SET CONSTRAINTS ALL DEFERRED; args=()
2013-11-03 22:48:12,312 [DEBUG] django.db.backends: (0.001) SELECT "south_migrationhistory"."id", "south_migrationhistory"."app_name", "south_migrationhistory"."migration", "south_migrationhistory"."applied" FROM "south_migrationhistory" WHERE "south_migrationhistory"."applied" IS NOT NULL ORDER BY "south_migrationhistory"."applied" ASC; args=()
2013-11-03 22:48:12,320 [DEBUG] django.db.backends: (0.001) CREATE TABLE DDL_TRANSACTION_TEST (X INT); args=()
2013-11-03 22:48:12,321 [DEBUG] django.db.backends: (0.000) CREATE TABLE DDL_TRANSACTION_TEST (X INT); args=()
2013-11-03 22:48:12,321 [DEBUG] django.db.backends: (0.000) DROP TABLE DDL_TRANSACTION_TEST; args=()
2013-11-03 22:48:12,324 [DEBUG] south: execute "ALTER TABLE "location_update_location" ADD COLUMN "tour_id_id" varchar(64) NOT NULL;" with params "[]"
2013-11-03 22:48:12,325 [DEBUG] django.db.backends: (0.001) ALTER TABLE "location_update_location" ADD COLUMN "tour_id_id" varchar(64) NOT NULL;; args=[]
2013-11-03 22:48:12,325 [DEBUG] south: execute "ALTER TABLE "location_update_location" ADD CONSTRAINT "tour_id_id_refs_tour_id_2779d8cc" FOREIGN KEY ("tour_id_id") REFERENCES "tour_config_tourconfig" ("tour_id") DEFERRABLE INITIALLY DEFERRED;" with params "[]"
2013-11-03 22:48:12,326 [DEBUG] django.db.backends: (0.000) ALTER TABLE "location_update_location" ADD CONSTRAINT "tour_id_id_refs_tour_id_2779d8cc" FOREIGN KEY ("tour_id_id") REFERENCES "tour_config_tourconfig" ("tour_id") DEFERRABLE INITIALLY DEFERRED;; args=[]
2013-11-03 22:48:30,293 [DEBUG] django.db.backends: (0.001) SELECT "south_migrationhistory"."id", "south_migrationhistory"."app_name", "south_migrationhistory"."migration", "south_migrationhistory"."applied" FROM "south_migrationhistory" WHERE "south_migrationhistory"."applied" IS NOT NULL ORDER BY "south_migrationhistory"."applied" ASC; args=()
2013-11-03 22:48:30,300 [DEBUG] django.db.backends: (0.000) SET CONSTRAINTS ALL IMMEDIATE; args=()
2013-11-03 22:48:30,300 [DEBUG] django.db.backends: (0.000) SET CONSTRAINTS ALL DEFERRED; args=()
2013-11-03 22:48:30,325 [DEBUG] django.db.backends: (0.001) SELECT "south_migrationhistory"."id", "south_migrationhistory"."app_name", "south_migrationhistory"."migration", "south_migrationhistory"."applied" FROM "south_migrationhistory" WHERE "south_migrationhistory"."applied" IS NOT NULL ORDER BY "south_migrationhistory"."applied" ASC; args=()
2013-11-03 22:48:30,332 [DEBUG] django.db.backends: (0.001) CREATE TABLE DDL_TRANSACTION_TEST (X INT); args=()
2013-11-03 22:48:30,333 [DEBUG] django.db.backends: (0.000) CREATE TABLE DDL_TRANSACTION_TEST (X INT); args=()
2013-11-03 22:48:30,333 [DEBUG] django.db.backends: (0.000) DROP TABLE DDL_TRANSACTION_TEST; args=()
2013-11-03 22:48:30,335 [DEBUG] south: execute "ALTER TABLE "location_update_location" ADD COLUMN "tour_id_id" varchar(64) NOT NULL;" with params "[]"
2013-11-03 22:48:30,335 [DEBUG] django.db.backends: (0.001) ALTER TABLE "location_update_location" ADD COLUMN "tour_id_id" varchar(64) NOT NULL;; args=[]
2013-11-03 22:48:30,336 [DEBUG] south: execute "ALTER TABLE "location_update_location" ADD CONSTRAINT "tour_id_id_refs_tour_id_2779d8cc" FOREIGN KEY ("tour_id_id") REFERENCES "tour_config_tourconfig" ("tour_id") DEFERRABLE INITIALLY DEFERRED;" with params "[]"
2013-11-03 22:48:30,336 [DEBUG] django.db.backends: (0.000) ALTER TABLE "location_update_location" ADD CONSTRAINT "tour_id_id_refs_tour_id_2779d8cc" FOREIGN KEY ("tour_id_id") REFERENCES "tour_config_tourconfig" ("tour_id") DEFERRABLE INITIALLY DEFERRED;; args=[]
2013-11-03 22:51:35,488 [DEBUG] django.db.backends: (0.003) 
            SELECT c.relname
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('r', 'v', '')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid); args=()
2013-11-03 22:51:35,491 [DEBUG] django.db.backends: (0.001) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'permission'  AND "django_content_type"."app_label" = 'auth' ); args=('permission', u'auth')
2013-11-03 22:51:35,493 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'group'  AND "django_content_type"."app_label" = 'auth' ); args=('group', u'auth')
2013-11-03 22:51:35,494 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'user'  AND "django_content_type"."app_label" = 'auth' ); args=('user', u'auth')
2013-11-03 22:51:35,495 [DEBUG] django.db.backends: (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1, 2, 3) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1, 2, 3)
2013-11-03 22:51:35,496 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'  ORDER BY "django_content_type"."name" ASC; args=(u'auth',)
2013-11-03 22:51:35,497 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'contenttype'  AND "django_content_type"."app_label" = 'contenttypes' ); args=('contenttype', u'contenttypes')
2013-11-03 22:51:35,498 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(4,)
2013-11-03 22:51:35,499 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'  ORDER BY "django_content_type"."name" ASC; args=(u'contenttypes',)
2013-11-03 22:51:35,500 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'session'  AND "django_content_type"."app_label" = 'sessions' ); args=('session', u'sessions')
2013-11-03 22:51:35,501 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,)
2013-11-03 22:51:35,502 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'  ORDER BY "django_content_type"."name" ASC; args=(u'sessions',)
2013-11-03 22:51:35,503 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'site'  AND "django_content_type"."app_label" = 'sites' ); args=('site', u'sites')
2013-11-03 22:51:35,505 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,)
2013-11-03 22:51:35,505 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sites'  ORDER BY "django_content_type"."name" ASC; args=(u'sites',)
2013-11-03 22:51:35,509 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'migrationhistory'  AND "django_content_type"."app_label" = 'south' ); args=('migrationhistory', u'south')
2013-11-03 22:51:35,510 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(7,)
2013-11-03 22:51:35,511 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'south'  ORDER BY "django_content_type"."name" ASC; args=(u'south',)
2013-11-03 22:51:35,512 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'logentry'  AND "django_content_type"."app_label" = 'admin' ); args=('logentry', u'admin')
2013-11-03 22:51:35,513 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8,)
2013-11-03 22:51:35,514 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'  ORDER BY "django_content_type"."name" ASC; args=(u'admin',)
2013-11-03 22:51:35,521 [DEBUG] django.db.backends: (0.000) SET CONSTRAINTS ALL IMMEDIATE; args=()
2013-11-03 22:51:35,521 [DEBUG] django.db.backends: (0.000) SET CONSTRAINTS ALL DEFERRED; args=()
2013-11-03 22:54:17,520 [DEBUG] django.db.backends: (0.001) SELECT "south_migrationhistory"."id", "south_migrationhistory"."app_name", "south_migrationhistory"."migration", "south_migrationhistory"."applied" FROM "south_migrationhistory" WHERE "south_migrationhistory"."applied" IS NOT NULL ORDER BY "south_migrationhistory"."applied" ASC; args=()
2013-11-03 22:54:17,527 [DEBUG] django.db.backends: (0.000) SET CONSTRAINTS ALL IMMEDIATE; args=()
2013-11-03 22:54:17,527 [DEBUG] django.db.backends: (0.000) SET CONSTRAINTS ALL DEFERRED; args=()
2013-11-03 22:54:17,551 [DEBUG] django.db.backends: (0.001) SELECT "south_migrationhistory"."id", "south_migrationhistory"."app_name", "south_migrationhistory"."migration", "south_migrationhistory"."applied" FROM "south_migrationhistory" WHERE "south_migrationhistory"."applied" IS NOT NULL ORDER BY "south_migrationhistory"."applied" ASC; args=()
2013-11-03 22:54:17,559 [DEBUG] django.db.backends: (0.001) CREATE TABLE DDL_TRANSACTION_TEST (X INT); args=()
2013-11-03 22:54:17,559 [DEBUG] django.db.backends: (0.000) CREATE TABLE DDL_TRANSACTION_TEST (X INT); args=()
2013-11-03 22:54:17,560 [DEBUG] django.db.backends: (0.000) DROP TABLE DDL_TRANSACTION_TEST; args=()
2013-11-03 22:54:17,563 [DEBUG] south: execute "ALTER TABLE "location_update_location" ADD COLUMN "tour_id_id" varchar(64) NOT NULL;" with params "[]"
2013-11-03 22:54:17,564 [DEBUG] django.db.backends: (0.001) ALTER TABLE "location_update_location" ADD COLUMN "tour_id_id" varchar(64) NOT NULL;; args=[]
2013-11-03 22:54:17,564 [DEBUG] south: execute "ALTER TABLE "location_update_location" ADD CONSTRAINT "tour_id_id_refs_tour_id_2779d8cc" FOREIGN KEY ("tour_id_id") REFERENCES "tour_config_tourconfig" ("tour_id") DEFERRABLE INITIALLY DEFERRED;" with params "[]"
2013-11-03 22:54:17,564 [DEBUG] django.db.backends: (0.000) ALTER TABLE "location_update_location" ADD CONSTRAINT "tour_id_id_refs_tour_id_2779d8cc" FOREIGN KEY ("tour_id_id") REFERENCES "tour_config_tourconfig" ("tour_id") DEFERRABLE INITIALLY DEFERRED;; args=[]
2013-11-03 22:54:27,759 [DEBUG] django.db.backends: (0.003) 
            SELECT c.relname
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('r', 'v', '')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid); args=()
2013-11-03 22:54:27,762 [DEBUG] django.db.backends: (0.001) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'permission'  AND "django_content_type"."app_label" = 'auth' ); args=('permission', u'auth')
2013-11-03 22:54:27,763 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'group'  AND "django_content_type"."app_label" = 'auth' ); args=('group', u'auth')
2013-11-03 22:54:27,764 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'user'  AND "django_content_type"."app_label" = 'auth' ); args=('user', u'auth')
2013-11-03 22:54:27,766 [DEBUG] django.db.backends: (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1, 2, 3) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1, 2, 3)
2013-11-03 22:54:27,767 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'  ORDER BY "django_content_type"."name" ASC; args=(u'auth',)
2013-11-03 22:54:27,768 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'contenttype'  AND "django_content_type"."app_label" = 'contenttypes' ); args=('contenttype', u'contenttypes')
2013-11-03 22:54:27,769 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(4,)
2013-11-03 22:54:27,770 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'  ORDER BY "django_content_type"."name" ASC; args=(u'contenttypes',)
2013-11-03 22:54:27,771 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'session'  AND "django_content_type"."app_label" = 'sessions' ); args=('session', u'sessions')
2013-11-03 22:54:27,773 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,)
2013-11-03 22:54:27,773 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'  ORDER BY "django_content_type"."name" ASC; args=(u'sessions',)
2013-11-03 22:54:27,774 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'site'  AND "django_content_type"."app_label" = 'sites' ); args=('site', u'sites')
2013-11-03 22:54:27,776 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,)
2013-11-03 22:54:27,776 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sites'  ORDER BY "django_content_type"."name" ASC; args=(u'sites',)
2013-11-03 22:54:27,780 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'migrationhistory'  AND "django_content_type"."app_label" = 'south' ); args=('migrationhistory', u'south')
2013-11-03 22:54:27,781 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(7,)
2013-11-03 22:54:27,782 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'south'  ORDER BY "django_content_type"."name" ASC; args=(u'south',)
2013-11-03 22:54:27,783 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'logentry'  AND "django_content_type"."app_label" = 'admin' ); args=('logentry', u'admin')
2013-11-03 22:54:27,784 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8,)
2013-11-03 22:54:27,785 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'  ORDER BY "django_content_type"."name" ASC; args=(u'admin',)
2013-11-03 22:54:27,793 [DEBUG] django.db.backends: (0.000) SET CONSTRAINTS ALL IMMEDIATE; args=()
2013-11-03 22:54:27,793 [DEBUG] django.db.backends: (0.000) SET CONSTRAINTS ALL DEFERRED; args=()
2013-11-03 22:59:22,665 [DEBUG] django.db.backends: (0.001) SELECT "south_migrationhistory"."id", "south_migrationhistory"."app_name", "south_migrationhistory"."migration", "south_migrationhistory"."applied" FROM "south_migrationhistory" WHERE "south_migrationhistory"."applied" IS NOT NULL ORDER BY "south_migrationhistory"."applied" ASC; args=()
2013-11-03 22:59:22,670 [DEBUG] django.db.backends: (0.001) CREATE TABLE DDL_TRANSACTION_TEST (X INT); args=()
2013-11-03 22:59:22,671 [DEBUG] django.db.backends: (0.000) CREATE TABLE DDL_TRANSACTION_TEST (X INT); args=()
2013-11-03 22:59:22,671 [DEBUG] django.db.backends: (0.000) DROP TABLE DDL_TRANSACTION_TEST; args=()
2013-11-03 22:59:22,675 [DEBUG] south: execute "CREATE TABLE "tour_config_tourconfig" ("id" serial NOT NULL PRIMARY KEY, "tour_name" varchar(256) NOT NULL, "tour_logo" varchar(200) NOT NULL, "tour_id" varchar(256) NOT NULL, "tour_organization" varchar(256) NOT NULL, "dcs_url" varchar(200) NOT NULL, "gcm_sender_id" varchar(64) NOT NULL, "start_time" timestamp with time zone NOT NULL, "is_cancelled" boolean NOT NULL, "max_tour_time" timestamp with time zone NOT NULL, "tour_route_id" integer NOT NULL);" with params "[]"
2013-11-03 22:59:22,682 [DEBUG] django.db.backends: (0.007) CREATE TABLE "tour_config_tourconfig" ("id" serial NOT NULL PRIMARY KEY, "tour_name" varchar(256) NOT NULL, "tour_logo" varchar(200) NOT NULL, "tour_id" varchar(256) NOT NULL, "tour_organization" varchar(256) NOT NULL, "dcs_url" varchar(200) NOT NULL, "gcm_sender_id" varchar(64) NOT NULL, "start_time" timestamp with time zone NOT NULL, "is_cancelled" boolean NOT NULL, "max_tour_time" timestamp with time zone NOT NULL, "tour_route_id" integer NOT NULL);; args=[]
2013-11-03 22:59:22,683 [DEBUG] south: execute "CREATE TABLE "tour_config_tourroute" ("id" serial NOT NULL PRIMARY KEY, "name" varchar(64) NOT NULL);" with params "[]"
2013-11-03 22:59:22,687 [DEBUG] django.db.backends: (0.003) CREATE TABLE "tour_config_tourroute" ("id" serial NOT NULL PRIMARY KEY, "name" varchar(64) NOT NULL);; args=[]
2013-11-03 22:59:22,687 [DEBUG] south: execute "ALTER TABLE "tour_config_tourconfig" ADD CONSTRAINT "tour_route_id_refs_id_6f5530a9" FOREIGN KEY ("tour_route_id") REFERENCES "tour_config_tourroute" ("id") DEFERRABLE INITIALLY DEFERRED;" with params "[]"
2013-11-03 22:59:22,688 [DEBUG] django.db.backends: (0.001) ALTER TABLE "tour_config_tourconfig" ADD CONSTRAINT "tour_route_id_refs_id_6f5530a9" FOREIGN KEY ("tour_route_id") REFERENCES "tour_config_tourroute" ("id") DEFERRABLE INITIALLY DEFERRED;; args=[]
2013-11-03 22:59:22,688 [DEBUG] south: execute "CREATE INDEX "tour_config_tourconfig_tour_route_id" ON "tour_config_tourconfig" ("tour_route_id");" with params "[]"
2013-11-03 22:59:22,692 [DEBUG] django.db.backends: (0.004) CREATE INDEX "tour_config_tourconfig_tour_route_id" ON "tour_config_tourconfig" ("tour_route_id");; args=[]
2013-11-03 22:59:22,692 [DEBUG] south: execute "SELECT AddGeometryColumn('tour_config_tourroute', 'route', 4326, 'MULTILINESTRING', 2);" with params "[]"
2013-11-03 22:59:23,023 [DEBUG] django.db.backends: (0.330) SELECT AddGeometryColumn('tour_config_tourroute', 'route', 4326, 'MULTILINESTRING', 2);; args=[]
2013-11-03 22:59:23,023 [DEBUG] south: execute "ALTER TABLE "tour_config_tourroute" ALTER "route" SET NOT NULL;" with params "[]"
2013-11-03 22:59:23,023 [DEBUG] django.db.backends: (0.000) ALTER TABLE "tour_config_tourroute" ALTER "route" SET NOT NULL;; args=[]
2013-11-03 22:59:23,023 [DEBUG] south: execute "CREATE INDEX "tour_config_tourroute_route_id" ON "tour_config_tourroute" USING GIST ( "route" GIST_GEOMETRY_OPS );" with params "[]"
2013-11-03 22:59:23,027 [DEBUG] django.db.backends: (0.004) CREATE INDEX "tour_config_tourroute_route_id" ON "tour_config_tourroute" USING GIST ( "route" GIST_GEOMETRY_OPS );; args=[]
2013-11-03 22:59:23,030 [DEBUG] django.db.backends: (0.000) SELECT "south_migrationhistory"."id", "south_migrationhistory"."app_name", "south_migrationhistory"."migration", "south_migrationhistory"."applied" FROM "south_migrationhistory" WHERE ("south_migrationhistory"."app_name" = 'tour_config'  AND "south_migrationhistory"."migration" = '0001_initial' ); args=('tour_config', '0001_initial')
2013-11-03 22:59:23,030 [DEBUG] django.db.backends: (0.000) INSERT INTO "south_migrationhistory" ("app_name", "migration", "applied") VALUES ('tour_config', '0001_initial', '2013-11-04 03:59:23.030439+00:00') RETURNING "south_migrationhistory"."id"; args=('tour_config', '0001_initial', u'2013-11-04 03:59:23.030439+00:00')
2013-11-03 22:59:23,035 [DEBUG] south: execute "
                SELECT kc.constraint_name, kc.column_name, c.constraint_type
                FROM information_schema.constraint_column_usage AS kc
                JOIN information_schema.table_constraints AS c ON
                    kc.table_schema = c.table_schema AND
                    kc.table_name = c.table_name AND
                    kc.constraint_name = c.constraint_name
                WHERE
                    kc.table_schema = %s AND
                    kc.table_name = %s
            " with params "['public', 'tour_config_tourconfig']"
2013-11-03 22:59:23,668 [DEBUG] django.db.backends: (0.633) 
                SELECT kc.constraint_name, kc.column_name, c.constraint_type
                FROM information_schema.constraint_column_usage AS kc
                JOIN information_schema.table_constraints AS c ON
                    kc.table_schema = c.table_schema AND
                    kc.table_name = c.table_name AND
                    kc.constraint_name = c.constraint_name
                WHERE
                    kc.table_schema = 'public' AND
                    kc.table_name = 'tour_config_tourconfig'
            ; args=['public', 'tour_config_tourconfig']
2013-11-03 22:59:23,668 [DEBUG] south: execute "
                SELECT kc.constraint_name, kc.column_name, c.constraint_type
                FROM information_schema.key_column_usage AS kc
                JOIN information_schema.table_constraints AS c ON
                    kc.table_schema = c.table_schema AND
                    kc.table_name = c.table_name AND
                    kc.constraint_name = c.constraint_name
                WHERE
                    kc.table_schema = %s AND
                    kc.table_name = %s
            " with params "['public', 'tour_config_tourconfig']"
2013-11-03 22:59:24,162 [DEBUG] django.db.backends: (0.494) 
                SELECT kc.constraint_name, kc.column_name, c.constraint_type
                FROM information_schema.key_column_usage AS kc
                JOIN information_schema.table_constraints AS c ON
                    kc.table_schema = c.table_schema AND
                    kc.table_name = c.table_name AND
                    kc.constraint_name = c.constraint_name
                WHERE
                    kc.table_schema = 'public' AND
                    kc.table_name = 'tour_config_tourconfig'
            ; args=['public', 'tour_config_tourconfig']
2013-11-03 22:59:24,162 [DEBUG] south: execute "
                SELECT kc.constraint_name, kc.column_name, c.constraint_type
                FROM information_schema.constraint_column_usage AS kc
                JOIN information_schema.table_constraints AS c ON
                    kc.table_schema = c.table_schema AND
                    kc.table_name = c.table_name AND
                    kc.constraint_name = c.constraint_name
                WHERE
                    kc.table_schema = %s AND
                    kc.table_name = %s
            " with params "['public', 'tour_config_tourconfig']"
2013-11-03 22:59:24,172 [DEBUG] django.db.backends: (0.009) 
                SELECT kc.constraint_name, kc.column_name, c.constraint_type
                FROM information_schema.constraint_column_usage AS kc
                JOIN information_schema.table_constraints AS c ON
                    kc.table_schema = c.table_schema AND
                    kc.table_name = c.table_name AND
                    kc.constraint_name = c.constraint_name
                WHERE
                    kc.table_schema = 'public' AND
                    kc.table_name = 'tour_config_tourconfig'
            ; args=['public', 'tour_config_tourconfig']
2013-11-03 22:59:24,172 [DEBUG] south: execute "
                SELECT kc.constraint_name, kc.column_name, c.constraint_type
                FROM information_schema.key_column_usage AS kc
                JOIN information_schema.table_constraints AS c ON
                    kc.table_schema = c.table_schema AND
                    kc.table_name = c.table_name AND
                    kc.constraint_name = c.constraint_name
                WHERE
                    kc.table_schema = %s AND
                    kc.table_name = %s
            " with params "['public', 'tour_config_tourconfig']"
2013-11-03 22:59:24,175 [DEBUG] django.db.backends: (0.003) 
                SELECT kc.constraint_name, kc.column_name, c.constraint_type
                FROM information_schema.key_column_usage AS kc
                JOIN information_schema.table_constraints AS c ON
                    kc.table_schema = c.table_schema AND
                    kc.table_name = c.table_name AND
                    kc.constraint_name = c.constraint_name
                WHERE
                    kc.table_schema = 'public' AND
                    kc.table_name = 'tour_config_tourconfig'
            ; args=['public', 'tour_config_tourconfig']
2013-11-03 22:59:24,175 [DEBUG] south: execute "ALTER TABLE "tour_config_tourconfig" ALTER COLUMN "tour_id" TYPE varchar(256), ALTER COLUMN "tour_id" SET NOT NULL, ALTER COLUMN "tour_id" DROP DEFAULT;" with params "[]"
2013-11-03 22:59:24,176 [DEBUG] django.db.backends: (0.000) ALTER TABLE "tour_config_tourconfig" ALTER COLUMN "tour_id" TYPE varchar(256), ALTER COLUMN "tour_id" SET NOT NULL, ALTER COLUMN "tour_id" DROP DEFAULT;; args=[]
2013-11-03 22:59:24,176 [DEBUG] south: execute "CREATE INDEX "tour_config_tourconfig_tour_id" ON "tour_config_tourconfig" ("tour_id");" with params "[]"
2013-11-03 22:59:24,179 [DEBUG] django.db.backends: (0.003) CREATE INDEX "tour_config_tourconfig_tour_id" ON "tour_config_tourconfig" ("tour_id");; args=[]
2013-11-03 22:59:24,181 [DEBUG] django.db.backends: (0.000) SELECT "south_migrationhistory"."id", "south_migrationhistory"."app_name", "south_migrationhistory"."migration", "south_migrationhistory"."applied" FROM "south_migrationhistory" WHERE ("south_migrationhistory"."app_name" = 'tour_config'  AND "south_migrationhistory"."migration" = '0002_TourConfig' ); args=('tour_config', '0002_TourConfig')
2013-11-03 22:59:24,181 [DEBUG] django.db.backends: (0.000) INSERT INTO "south_migrationhistory" ("app_name", "migration", "applied") VALUES ('tour_config', '0002_TourConfig', '2013-11-04 03:59:24.181251+00:00') RETURNING "south_migrationhistory"."id"; args=('tour_config', '0002_TourConfig', u'2013-11-04 03:59:24.181251+00:00')
2013-11-03 22:59:24,184 [DEBUG] south: execute "
                SELECT kc.constraint_name, kc.column_name, c.constraint_type
                FROM information_schema.constraint_column_usage AS kc
                JOIN information_schema.table_constraints AS c ON
                    kc.table_schema = c.table_schema AND
                    kc.table_name = c.table_name AND
                    kc.constraint_name = c.constraint_name
                WHERE
                    kc.table_schema = %s AND
                    kc.table_name = %s
            " with params "['public', 'tour_config_tourconfig']"
2013-11-03 22:59:24,194 [DEBUG] django.db.backends: (0.010) 
                SELECT kc.constraint_name, kc.column_name, c.constraint_type
                FROM information_schema.constraint_column_usage AS kc
                JOIN information_schema.table_constraints AS c ON
                    kc.table_schema = c.table_schema AND
                    kc.table_name = c.table_name AND
                    kc.constraint_name = c.constraint_name
                WHERE
                    kc.table_schema = 'public' AND
                    kc.table_name = 'tour_config_tourconfig'
            ; args=['public', 'tour_config_tourconfig']
2013-11-03 22:59:24,194 [DEBUG] south: execute "
                SELECT kc.constraint_name, kc.column_name, c.constraint_type
                FROM information_schema.key_column_usage AS kc
                JOIN information_schema.table_constraints AS c ON
                    kc.table_schema = c.table_schema AND
                    kc.table_name = c.table_name AND
                    kc.constraint_name = c.constraint_name
                WHERE
                    kc.table_schema = %s AND
                    kc.table_name = %s
            " with params "['public', 'tour_config_tourconfig']"
2013-11-03 22:59:24,197 [DEBUG] django.db.backends: (0.003) 
                SELECT kc.constraint_name, kc.column_name, c.constraint_type
                FROM information_schema.key_column_usage AS kc
                JOIN information_schema.table_constraints AS c ON
                    kc.table_schema = c.table_schema AND
                    kc.table_name = c.table_name AND
                    kc.constraint_name = c.constraint_name
                WHERE
                    kc.table_schema = 'public' AND
                    kc.table_name = 'tour_config_tourconfig'
            ; args=['public', 'tour_config_tourconfig']
2013-11-03 22:59:24,197 [DEBUG] south: execute "
                SELECT kc.constraint_name, kc.column_name, c.constraint_type
                FROM information_schema.constraint_column_usage AS kc
                JOIN information_schema.table_constraints AS c ON
                    kc.table_schema = c.table_schema AND
                    kc.table_name = c.table_name AND
                    kc.constraint_name = c.constraint_name
                WHERE
                    kc.table_schema = %s AND
                    kc.table_name = %s
            " with params "['public', 'tour_config_tourconfig']"
2013-11-03 22:59:24,206 [DEBUG] django.db.backends: (0.009) 
                SELECT kc.constraint_name, kc.column_name, c.constraint_type
                FROM information_schema.constraint_column_usage AS kc
                JOIN information_schema.table_constraints AS c ON
                    kc.table_schema = c.table_schema AND
                    kc.table_name = c.table_name AND
                    kc.constraint_name = c.constraint_name
                WHERE
                    kc.table_schema = 'public' AND
                    kc.table_name = 'tour_config_tourconfig'
            ; args=['public', 'tour_config_tourconfig']
2013-11-03 22:59:24,206 [DEBUG] south: execute "
                SELECT kc.constraint_name, kc.column_name, c.constraint_type
                FROM information_schema.key_column_usage AS kc
                JOIN information_schema.table_constraints AS c ON
                    kc.table_schema = c.table_schema AND
                    kc.table_name = c.table_name AND
                    kc.constraint_name = c.constraint_name
                WHERE
                    kc.table_schema = %s AND
                    kc.table_name = %s
            " with params "['public', 'tour_config_tourconfig']"
2013-11-03 22:59:24,209 [DEBUG] django.db.backends: (0.002) 
                SELECT kc.constraint_name, kc.column_name, c.constraint_type
                FROM information_schema.key_column_usage AS kc
                JOIN information_schema.table_constraints AS c ON
                    kc.table_schema = c.table_schema AND
                    kc.table_name = c.table_name AND
                    kc.constraint_name = c.constraint_name
                WHERE
                    kc.table_schema = 'public' AND
                    kc.table_name = 'tour_config_tourconfig'
            ; args=['public', 'tour_config_tourconfig']
2013-11-03 22:59:24,209 [DEBUG] south: execute "ALTER TABLE "tour_config_tourconfig" ALTER COLUMN "tour_id" TYPE varchar(64), ALTER COLUMN "tour_id" SET NOT NULL, ALTER COLUMN "tour_id" DROP DEFAULT;" with params "[]"
2013-11-03 22:59:24,218 [DEBUG] django.db.backends: (0.009) ALTER TABLE "tour_config_tourconfig" ALTER COLUMN "tour_id" TYPE varchar(64), ALTER COLUMN "tour_id" SET NOT NULL, ALTER COLUMN "tour_id" DROP DEFAULT;; args=[]
2013-11-03 22:59:24,218 [DEBUG] south: execute "ALTER TABLE "tour_config_tourconfig" ADD CONSTRAINT "tour_config_tourconfig_tour_id_uniq" UNIQUE ("tour_id")" with params "[]"
2013-11-03 22:59:24,221 [DEBUG] django.db.backends: (0.002) ALTER TABLE "tour_config_tourconfig" ADD CONSTRAINT "tour_config_tourconfig_tour_id_uniq" UNIQUE ("tour_id"); args=[]
2013-11-03 22:59:24,224 [DEBUG] django.db.backends: (0.000) SELECT "south_migrationhistory"."id", "south_migrationhistory"."app_name", "south_migrationhistory"."migration", "south_migrationhistory"."applied" FROM "south_migrationhistory" WHERE ("south_migrationhistory"."app_name" = 'tour_config'  AND "south_migrationhistory"."migration" = '0003_TourConfig' ); args=('tour_config', '0003_TourConfig')
2013-11-03 22:59:24,225 [DEBUG] django.db.backends: (0.000) INSERT INTO "south_migrationhistory" ("app_name", "migration", "applied") VALUES ('tour_config', '0003_TourConfig', '2013-11-04 03:59:24.224771+00:00') RETURNING "south_migrationhistory"."id"; args=('tour_config', '0003_TourConfig', u'2013-11-04 03:59:24.224771+00:00')
2013-11-03 22:59:24,228 [DEBUG] south: execute "ALTER TABLE "tour_config_tourconfig" DROP COLUMN "start_time" CASCADE;" with params "[]"
2013-11-03 22:59:24,228 [DEBUG] django.db.backends: (0.000) ALTER TABLE "tour_config_tourconfig" DROP COLUMN "start_time" CASCADE;; args=[]
2013-11-03 22:59:24,228 [DEBUG] south: execute "ALTER TABLE "tour_config_tourconfig" DROP COLUMN "max_tour_time" CASCADE;" with params "[]"
2013-11-03 22:59:24,229 [DEBUG] django.db.backends: (0.000) ALTER TABLE "tour_config_tourconfig" DROP COLUMN "max_tour_time" CASCADE;; args=[]
2013-11-03 22:59:24,229 [DEBUG] south: execute "ALTER TABLE "tour_config_tourconfig" ADD COLUMN "start_time_new" integer CHECK ("start_time_new" >= 0) NOT NULL DEFAULT 0;" with params "[]"
2013-11-03 22:59:24,253 [DEBUG] django.db.backends: (0.024) ALTER TABLE "tour_config_tourconfig" ADD COLUMN "start_time_new" integer CHECK ("start_time_new" >= 0) NOT NULL DEFAULT 0;; args=[]
2013-11-03 22:59:24,254 [DEBUG] south: execute "ALTER TABLE "tour_config_tourconfig" ALTER COLUMN "start_time_new" TYPE integer, ADD CONSTRAINT CK_start_time_new_PSTV_1a6119b7 CHECK ("start_time_new" >= 0), ALTER COLUMN "start_time_new" SET NOT NULL, ALTER COLUMN "start_time_new" DROP DEFAULT;" with params "[]"
2013-11-03 22:59:24,254 [DEBUG] django.db.backends: (0.001) ALTER TABLE "tour_config_tourconfig" ALTER COLUMN "start_time_new" TYPE integer, ADD CONSTRAINT CK_start_time_new_PSTV_1a6119b7 CHECK ("start_time_new" >= 0), ALTER COLUMN "start_time_new" SET NOT NULL, ALTER COLUMN "start_time_new" DROP DEFAULT;; args=[]
2013-11-03 22:59:24,255 [DEBUG] south: execute "ALTER TABLE "tour_config_tourconfig" ADD COLUMN "max_tour_time_new" integer CHECK ("max_tour_time_new" >= 0) NOT NULL DEFAULT 0;" with params "[]"
2013-11-03 22:59:24,265 [DEBUG] django.db.backends: (0.011) ALTER TABLE "tour_config_tourconfig" ADD COLUMN "max_tour_time_new" integer CHECK ("max_tour_time_new" >= 0) NOT NULL DEFAULT 0;; args=[]
2013-11-03 22:59:24,266 [DEBUG] south: execute "ALTER TABLE "tour_config_tourconfig" ALTER COLUMN "max_tour_time_new" TYPE integer, ADD CONSTRAINT CK_max_tour_time_new_PSTV_2f34dadd CHECK ("max_tour_time_new" >= 0), ALTER COLUMN "max_tour_time_new" SET NOT NULL, ALTER COLUMN "max_tour_time_new" DROP DEFAULT;" with params "[]"
2013-11-03 22:59:24,267 [DEBUG] django.db.backends: (0.001) ALTER TABLE "tour_config_tourconfig" ALTER COLUMN "max_tour_time_new" TYPE integer, ADD CONSTRAINT CK_max_tour_time_new_PSTV_2f34dadd CHECK ("max_tour_time_new" >= 0), ALTER COLUMN "max_tour_time_new" SET NOT NULL, ALTER COLUMN "max_tour_time_new" DROP DEFAULT;; args=[]
2013-11-03 22:59:24,271 [DEBUG] django.db.backends: (0.000) SELECT "south_migrationhistory"."id", "south_migrationhistory"."app_name", "south_migrationhistory"."migration", "south_migrationhistory"."applied" FROM "south_migrationhistory" WHERE ("south_migrationhistory"."app_name" = 'tour_config'  AND "south_migrationhistory"."migration" = '0004_TourConfig' ); args=('tour_config', '0004_TourConfig')
2013-11-03 22:59:24,272 [DEBUG] django.db.backends: (0.000) INSERT INTO "south_migrationhistory" ("app_name", "migration", "applied") VALUES ('tour_config', '0004_TourConfig', '2013-11-04 03:59:24.272086+00:00') RETURNING "south_migrationhistory"."id"; args=('tour_config', '0004_TourConfig', u'2013-11-04 03:59:24.272086+00:00')
2013-11-03 22:59:24,275 [DEBUG] south: execute "ALTER TABLE "tour_config_tourconfig" DROP COLUMN "start_time_new" CASCADE;" with params "[]"
2013-11-03 22:59:24,276 [DEBUG] django.db.backends: (0.001) ALTER TABLE "tour_config_tourconfig" DROP COLUMN "start_time_new" CASCADE;; args=[]
2013-11-03 22:59:24,276 [DEBUG] south: execute "ALTER TABLE "tour_config_tourconfig" DROP COLUMN "max_tour_time_new" CASCADE;" with params "[]"
2013-11-03 22:59:24,277 [DEBUG] django.db.backends: (0.000) ALTER TABLE "tour_config_tourconfig" DROP COLUMN "max_tour_time_new" CASCADE;; args=[]
2013-11-03 22:59:24,277 [DEBUG] south: execute "ALTER TABLE "tour_config_tourconfig" ADD COLUMN "start_time" integer CHECK ("start_time" >= 0) NOT NULL DEFAULT 0;" with params "[]"
2013-11-03 22:59:24,287 [DEBUG] django.db.backends: (0.011) ALTER TABLE "tour_config_tourconfig" ADD COLUMN "start_time" integer CHECK ("start_time" >= 0) NOT NULL DEFAULT 0;; args=[]
2013-11-03 22:59:24,288 [DEBUG] south: execute "ALTER TABLE "tour_config_tourconfig" ALTER COLUMN "start_time" TYPE integer, ADD CONSTRAINT CK_start_time_PSTV_3da41704 CHECK ("start_time" >= 0), ALTER COLUMN "start_time" SET NOT NULL, ALTER COLUMN "start_time" DROP DEFAULT;" with params "[]"
2013-11-03 22:59:24,289 [DEBUG] django.db.backends: (0.001) ALTER TABLE "tour_config_tourconfig" ALTER COLUMN "start_time" TYPE integer, ADD CONSTRAINT CK_start_time_PSTV_3da41704 CHECK ("start_time" >= 0), ALTER COLUMN "start_time" SET NOT NULL, ALTER COLUMN "start_time" DROP DEFAULT;; args=[]
2013-11-03 22:59:24,289 [DEBUG] south: execute "ALTER TABLE "tour_config_tourconfig" ADD COLUMN "max_tour_time" integer CHECK ("max_tour_time" >= 0) NOT NULL DEFAULT 0;" with params "[]"
2013-11-03 22:59:24,300 [DEBUG] django.db.backends: (0.010) ALTER TABLE "tour_config_tourconfig" ADD COLUMN "max_tour_time" integer CHECK ("max_tour_time" >= 0) NOT NULL DEFAULT 0;; args=[]
2013-11-03 22:59:24,300 [DEBUG] south: execute "ALTER TABLE "tour_config_tourconfig" ALTER COLUMN "max_tour_time" TYPE integer, ADD CONSTRAINT CK_max_tour_time_PSTV_35d98f50 CHECK ("max_tour_time" >= 0), ALTER COLUMN "max_tour_time" SET NOT NULL, ALTER COLUMN "max_tour_time" DROP DEFAULT;" with params "[]"
2013-11-03 22:59:24,301 [DEBUG] django.db.backends: (0.001) ALTER TABLE "tour_config_tourconfig" ALTER COLUMN "max_tour_time" TYPE integer, ADD CONSTRAINT CK_max_tour_time_PSTV_35d98f50 CHECK ("max_tour_time" >= 0), ALTER COLUMN "max_tour_time" SET NOT NULL, ALTER COLUMN "max_tour_time" DROP DEFAULT;; args=[]
2013-11-03 22:59:24,306 [DEBUG] django.db.backends: (0.001) SELECT "south_migrationhistory"."id", "south_migrationhistory"."app_name", "south_migrationhistory"."migration", "south_migrationhistory"."applied" FROM "south_migrationhistory" WHERE ("south_migrationhistory"."app_name" = 'tour_config'  AND "south_migrationhistory"."migration" = '0005_TourConfig' ); args=('tour_config', '0005_TourConfig')
2013-11-03 22:59:24,306 [DEBUG] django.db.backends: (0.000) INSERT INTO "south_migrationhistory" ("app_name", "migration", "applied") VALUES ('tour_config', '0005_TourConfig', '2013-11-04 03:59:24.306467+00:00') RETURNING "south_migrationhistory"."id"; args=('tour_config', '0005_TourConfig', u'2013-11-04 03:59:24.306467+00:00')
2013-11-03 22:59:24,309 [DEBUG] south: execute "
                SELECT kc.constraint_name, kc.column_name, c.constraint_type
                FROM information_schema.constraint_column_usage AS kc
                JOIN information_schema.table_constraints AS c ON
                    kc.table_schema = c.table_schema AND
                    kc.table_name = c.table_name AND
                    kc.constraint_name = c.constraint_name
                WHERE
                    kc.table_schema = %s AND
                    kc.table_name = %s
            " with params "['public', 'tour_config_tourconfig']"
2013-11-03 22:59:24,320 [DEBUG] django.db.backends: (0.010) 
                SELECT kc.constraint_name, kc.column_name, c.constraint_type
                FROM information_schema.constraint_column_usage AS kc
                JOIN information_schema.table_constraints AS c ON
                    kc.table_schema = c.table_schema AND
                    kc.table_name = c.table_name AND
                    kc.constraint_name = c.constraint_name
                WHERE
                    kc.table_schema = 'public' AND
                    kc.table_name = 'tour_config_tourconfig'
            ; args=['public', 'tour_config_tourconfig']
2013-11-03 22:59:24,320 [DEBUG] south: execute "
                SELECT kc.constraint_name, kc.column_name, c.constraint_type
                FROM information_schema.key_column_usage AS kc
                JOIN information_schema.table_constraints AS c ON
                    kc.table_schema = c.table_schema AND
                    kc.table_name = c.table_name AND
                    kc.constraint_name = c.constraint_name
                WHERE
                    kc.table_schema = %s AND
                    kc.table_name = %s
            " with params "['public', 'tour_config_tourconfig']"
2013-11-03 22:59:24,323 [DEBUG] django.db.backends: (0.003) 
                SELECT kc.constraint_name, kc.column_name, c.constraint_type
                FROM information_schema.key_column_usage AS kc
                JOIN information_schema.table_constraints AS c ON
                    kc.table_schema = c.table_schema AND
                    kc.table_name = c.table_name AND
                    kc.constraint_name = c.constraint_name
                WHERE
                    kc.table_schema = 'public' AND
                    kc.table_name = 'tour_config_tourconfig'
            ; args=['public', 'tour_config_tourconfig']
2013-11-03 22:59:24,323 [DEBUG] south: execute "
                SELECT kc.constraint_name, kc.column_name, c.constraint_type
                FROM information_schema.constraint_column_usage AS kc
                JOIN information_schema.table_constraints AS c ON
                    kc.table_schema = c.table_schema AND
                    kc.table_name = c.table_name AND
                    kc.constraint_name = c.constraint_name
                WHERE
                    kc.table_schema = %s AND
                    kc.table_name = %s
            " with params "['public', 'tour_config_tourconfig']"
2013-11-03 22:59:24,333 [DEBUG] django.db.backends: (0.010) 
                SELECT kc.constraint_name, kc.column_name, c.constraint_type
                FROM information_schema.constraint_column_usage AS kc
                JOIN information_schema.table_constraints AS c ON
                    kc.table_schema = c.table_schema AND
                    kc.table_name = c.table_name AND
                    kc.constraint_name = c.constraint_name
                WHERE
                    kc.table_schema = 'public' AND
                    kc.table_name = 'tour_config_tourconfig'
            ; args=['public', 'tour_config_tourconfig']
2013-11-03 22:59:24,334 [DEBUG] south: execute "
                SELECT kc.constraint_name, kc.column_name, c.constraint_type
                FROM information_schema.key_column_usage AS kc
                JOIN information_schema.table_constraints AS c ON
                    kc.table_schema = c.table_schema AND
                    kc.table_name = c.table_name AND
                    kc.constraint_name = c.constraint_name
                WHERE
                    kc.table_schema = %s AND
                    kc.table_name = %s
            " with params "['public', 'tour_config_tourconfig']"
2013-11-03 22:59:24,337 [DEBUG] django.db.backends: (0.003) 
                SELECT kc.constraint_name, kc.column_name, c.constraint_type
                FROM information_schema.key_column_usage AS kc
                JOIN information_schema.table_constraints AS c ON
                    kc.table_schema = c.table_schema AND
                    kc.table_name = c.table_name AND
                    kc.constraint_name = c.constraint_name
                WHERE
                    kc.table_schema = 'public' AND
                    kc.table_name = 'tour_config_tourconfig'
            ; args=['public', 'tour_config_tourconfig']
2013-11-03 22:59:24,337 [DEBUG] south: execute "ALTER TABLE "tour_config_tourconfig" DROP CONSTRAINT "tour_route_id_refs_id_6f5530a9"" with params "[]"
2013-11-03 22:59:24,338 [DEBUG] django.db.backends: (0.001) ALTER TABLE "tour_config_tourconfig" DROP CONSTRAINT "tour_route_id_refs_id_6f5530a9"; args=[]
2013-11-03 22:59:24,338 [DEBUG] south: execute "ALTER TABLE "tour_config_tourconfig" ALTER COLUMN "tour_route_id" TYPE integer, ALTER COLUMN "tour_route_id" DROP NOT NULL, ALTER COLUMN "tour_route_id" DROP DEFAULT;" with params "[]"
2013-11-03 22:59:24,342 [DEBUG] django.db.backends: (0.004) ALTER TABLE "tour_config_tourconfig" ALTER COLUMN "tour_route_id" TYPE integer, ALTER COLUMN "tour_route_id" DROP NOT NULL, ALTER COLUMN "tour_route_id" DROP DEFAULT;; args=[]
2013-11-03 22:59:24,342 [DEBUG] south: execute "ALTER TABLE "tour_config_tourconfig" ADD CONSTRAINT "tour_route_id_refs_id_6f5530a9" FOREIGN KEY ("tour_route_id") REFERENCES "tour_config_tourroute" ("id") DEFERRABLE INITIALLY DEFERRED;" with params "[]"
2013-11-03 22:59:24,343 [DEBUG] django.db.backends: (0.001) ALTER TABLE "tour_config_tourconfig" ADD CONSTRAINT "tour_route_id_refs_id_6f5530a9" FOREIGN KEY ("tour_route_id") REFERENCES "tour_config_tourroute" ("id") DEFERRABLE INITIALLY DEFERRED;; args=[]
2013-11-03 22:59:24,345 [DEBUG] django.db.backends: (0.000) SELECT "south_migrationhistory"."id", "south_migrationhistory"."app_name", "south_migrationhistory"."migration", "south_migrationhistory"."applied" FROM "south_migrationhistory" WHERE ("south_migrationhistory"."app_name" = 'tour_config'  AND "south_migrationhistory"."migration" = '0006_TourConfig' ); args=('tour_config', '0006_TourConfig')
2013-11-03 22:59:24,346 [DEBUG] django.db.backends: (0.000) INSERT INTO "south_migrationhistory" ("app_name", "migration", "applied") VALUES ('tour_config', '0006_TourConfig', '2013-11-04 03:59:24.345874+00:00') RETURNING "south_migrationhistory"."id"; args=('tour_config', '0006_TourConfig', u'2013-11-04 03:59:24.345874+00:00')
2013-11-03 22:59:24,348 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'tourconfig'  AND "django_content_type"."app_label" = 'tour_config' ); args=('tourconfig', u'tour_config')
2013-11-03 22:59:24,348 [DEBUG] django.db.backends: (0.000) SAVEPOINT s1220998400_x1; args=()
2013-11-03 22:59:24,349 [DEBUG] django.db.backends: (0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('tour', 'tour_config', 'tourconfig') RETURNING "django_content_type"."id"; args=(u'tour', u'tour_config', 'tourconfig')
2013-11-03 22:59:24,350 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'tourroute'  AND "django_content_type"."app_label" = 'tour_config' ); args=('tourroute', u'tour_config')
2013-11-03 22:59:24,351 [DEBUG] django.db.backends: (0.000) SAVEPOINT s1220998400_x1; args=()
2013-11-03 22:59:24,351 [DEBUG] django.db.backends: (0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('tour route', 'tour_config', 'tourroute') RETURNING "django_content_type"."id"; args=(u'tour route', u'tour_config', 'tourroute')
2013-11-03 22:59:24,354 [DEBUG] django.db.backends: (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (11, 12) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(11, 12)
2013-11-03 22:59:24,354 [DEBUG] django.db.backends: (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add tour', 11, 'add_tourconfig'), ('Can change tour', 11, 'change_tourconfig'), ('Can delete tour', 11, 'delete_tourconfig'), ('Can add tour route', 12, 'add_tourroute'), ('Can change tour route', 12, 'change_tourroute'), ('Can delete tour route', 12, 'delete_tourroute'); args=(u'Can add tour', 11, u'add_tourconfig', u'Can change tour', 11, u'change_tourconfig', u'Can delete tour', 11, u'delete_tourconfig', u'Can add tour route', 12, u'add_tourroute', u'Can change tour route', 12, u'change_tourroute', u'Can delete tour route', 12, u'delete_tourroute')
2013-11-03 22:59:24,356 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'tour_config'  ORDER BY "django_content_type"."name" ASC; args=(u'tour_config',)
2013-11-03 22:59:24,362 [DEBUG] django.db.backends: (0.000) SET CONSTRAINTS ALL IMMEDIATE; args=()
2013-11-03 22:59:24,363 [DEBUG] django.db.backends: (0.000) SET CONSTRAINTS ALL DEFERRED; args=()
2013-11-03 23:03:07,247 [DEBUG] django.db.backends: (0.003) 
            SELECT c.relname
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('r', 'v', '')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid); args=()
2013-11-03 23:03:07,250 [DEBUG] django.db.backends: (0.001) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'permission'  AND "django_content_type"."app_label" = 'auth' ); args=('permission', u'auth')
2013-11-03 23:03:07,252 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'group'  AND "django_content_type"."app_label" = 'auth' ); args=('group', u'auth')
2013-11-03 23:03:07,253 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'user'  AND "django_content_type"."app_label" = 'auth' ); args=('user', u'auth')
2013-11-03 23:03:07,254 [DEBUG] django.db.backends: (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1, 2, 3) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1, 2, 3)
2013-11-03 23:03:07,255 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'  ORDER BY "django_content_type"."name" ASC; args=(u'auth',)
2013-11-03 23:03:07,256 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'contenttype'  AND "django_content_type"."app_label" = 'contenttypes' ); args=('contenttype', u'contenttypes')
2013-11-03 23:03:07,258 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(4,)
2013-11-03 23:03:07,258 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'  ORDER BY "django_content_type"."name" ASC; args=(u'contenttypes',)
2013-11-03 23:03:07,260 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'session'  AND "django_content_type"."app_label" = 'sessions' ); args=('session', u'sessions')
2013-11-03 23:03:07,261 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,)
2013-11-03 23:03:07,262 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'  ORDER BY "django_content_type"."name" ASC; args=(u'sessions',)
2013-11-03 23:03:07,263 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'site'  AND "django_content_type"."app_label" = 'sites' ); args=('site', u'sites')
2013-11-03 23:03:07,264 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,)
2013-11-03 23:03:07,265 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sites'  ORDER BY "django_content_type"."name" ASC; args=(u'sites',)
2013-11-03 23:03:07,268 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'migrationhistory'  AND "django_content_type"."app_label" = 'south' ); args=('migrationhistory', u'south')
2013-11-03 23:03:07,269 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(7,)
2013-11-03 23:03:07,270 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'south'  ORDER BY "django_content_type"."name" ASC; args=(u'south',)
2013-11-03 23:03:07,271 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'logentry'  AND "django_content_type"."app_label" = 'admin' ); args=('logentry', u'admin')
2013-11-03 23:03:07,272 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8,)
2013-11-03 23:03:07,273 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'  ORDER BY "django_content_type"."name" ASC; args=(u'admin',)
2013-11-03 23:03:07,280 [DEBUG] django.db.backends: (0.000) SET CONSTRAINTS ALL IMMEDIATE; args=()
2013-11-03 23:03:07,281 [DEBUG] django.db.backends: (0.000) SET CONSTRAINTS ALL DEFERRED; args=()
2013-11-03 23:03:19,747 [DEBUG] django.db.backends: (0.001) SELECT "south_migrationhistory"."id", "south_migrationhistory"."app_name", "south_migrationhistory"."migration", "south_migrationhistory"."applied" FROM "south_migrationhistory" WHERE "south_migrationhistory"."applied" IS NOT NULL ORDER BY "south_migrationhistory"."applied" ASC; args=()
2013-11-03 23:03:19,756 [DEBUG] django.db.backends: (0.000) SET CONSTRAINTS ALL IMMEDIATE; args=()
2013-11-03 23:03:19,756 [DEBUG] django.db.backends: (0.000) SET CONSTRAINTS ALL DEFERRED; args=()
2013-11-03 23:04:57,759 [DEBUG] django.db.backends: (0.001) SELECT "south_migrationhistory"."id", "south_migrationhistory"."app_name", "south_migrationhistory"."migration", "south_migrationhistory"."applied" FROM "south_migrationhistory" WHERE "south_migrationhistory"."applied" IS NOT NULL ORDER BY "south_migrationhistory"."applied" ASC; args=()
2013-11-03 23:04:57,765 [DEBUG] django.db.backends: (0.001) CREATE TABLE DDL_TRANSACTION_TEST (X INT); args=()
2013-11-03 23:04:57,766 [DEBUG] django.db.backends: (0.000) CREATE TABLE DDL_TRANSACTION_TEST (X INT); args=()
2013-11-03 23:04:57,767 [DEBUG] django.db.backends: (0.000) DROP TABLE DDL_TRANSACTION_TEST; args=()
2013-11-03 23:04:57,771 [DEBUG] south: execute "CREATE TABLE "tour_config_tourconfig" ("id" serial NOT NULL PRIMARY KEY, "tour_name" varchar(256) NOT NULL, "tour_logo" varchar(200) NOT NULL, "tour_id" varchar(64) NOT NULL UNIQUE, "tour_organization" varchar(256) NOT NULL, "dcs_url" varchar(200) NOT NULL, "gcm_sender_id" varchar(64) NOT NULL, "start_time" integer CHECK ("start_time" >= 0) NOT NULL, "max_tour_time" integer CHECK ("max_tour_time" >= 0) NOT NULL, "is_cancelled" boolean NOT NULL, "tour_route_id" integer NULL);" with params "[]"
2013-11-03 23:04:57,772 [DEBUG] django.db.backends: (0.001) CREATE TABLE "tour_config_tourconfig" ("id" serial NOT NULL PRIMARY KEY, "tour_name" varchar(256) NOT NULL, "tour_logo" varchar(200) NOT NULL, "tour_id" varchar(64) NOT NULL UNIQUE, "tour_organization" varchar(256) NOT NULL, "dcs_url" varchar(200) NOT NULL, "gcm_sender_id" varchar(64) NOT NULL, "start_time" integer CHECK ("start_time" >= 0) NOT NULL, "max_tour_time" integer CHECK ("max_tour_time" >= 0) NOT NULL, "is_cancelled" boolean NOT NULL, "tour_route_id" integer NULL);; args=[]
2013-11-03 23:05:20,641 [DEBUG] django.db.backends: (0.003) 
            SELECT c.relname
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('r', 'v', '')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid); args=()
2013-11-03 23:05:20,644 [DEBUG] django.db.backends: (0.001) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'permission'  AND "django_content_type"."app_label" = 'auth' ); args=('permission', u'auth')
2013-11-03 23:05:20,645 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'group'  AND "django_content_type"."app_label" = 'auth' ); args=('group', u'auth')
2013-11-03 23:05:20,646 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'user'  AND "django_content_type"."app_label" = 'auth' ); args=('user', u'auth')
2013-11-03 23:05:20,648 [DEBUG] django.db.backends: (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1, 2, 3) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1, 2, 3)
2013-11-03 23:05:20,649 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'  ORDER BY "django_content_type"."name" ASC; args=(u'auth',)
2013-11-03 23:05:20,650 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'contenttype'  AND "django_content_type"."app_label" = 'contenttypes' ); args=('contenttype', u'contenttypes')
2013-11-03 23:05:20,651 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(4,)
2013-11-03 23:05:20,652 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'  ORDER BY "django_content_type"."name" ASC; args=(u'contenttypes',)
2013-11-03 23:05:20,653 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'session'  AND "django_content_type"."app_label" = 'sessions' ); args=('session', u'sessions')
2013-11-03 23:05:20,654 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,)
2013-11-03 23:05:20,655 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'  ORDER BY "django_content_type"."name" ASC; args=(u'sessions',)
2013-11-03 23:05:20,656 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'site'  AND "django_content_type"."app_label" = 'sites' ); args=('site', u'sites')
2013-11-03 23:05:20,658 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,)
2013-11-03 23:05:20,658 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sites'  ORDER BY "django_content_type"."name" ASC; args=(u'sites',)
2013-11-03 23:05:20,662 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'migrationhistory'  AND "django_content_type"."app_label" = 'south' ); args=('migrationhistory', u'south')
2013-11-03 23:05:20,663 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(7,)
2013-11-03 23:05:20,664 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'south'  ORDER BY "django_content_type"."name" ASC; args=(u'south',)
2013-11-03 23:05:20,665 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'logentry'  AND "django_content_type"."app_label" = 'admin' ); args=('logentry', u'admin')
2013-11-03 23:05:20,666 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8,)
2013-11-03 23:05:20,667 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'  ORDER BY "django_content_type"."name" ASC; args=(u'admin',)
2013-11-03 23:05:20,675 [DEBUG] django.db.backends: (0.000) SET CONSTRAINTS ALL IMMEDIATE; args=()
2013-11-03 23:05:20,675 [DEBUG] django.db.backends: (0.000) SET CONSTRAINTS ALL DEFERRED; args=()
2013-11-03 23:05:45,652 [DEBUG] django.db.backends: (0.001) SELECT 1 FROM pg_database WHERE datname = 'template_postgis' LIMIT 1;; args=('template_postgis',)
2013-11-03 23:05:45,653 [DEBUG] django.db.backends: (0.000) CREATE DATABASE "test_devcycle" ; args=()
2013-11-03 23:05:52,334 [DEBUG] django.db.backends: (0.108) DROP DATABASE "test_devcycle"; args=()
2013-11-03 23:05:52,643 [DEBUG] django.db.backends: (0.309) CREATE DATABASE "test_devcycle" ; args=()
2013-11-03 23:05:52,667 [DEBUG] django.db.backends: (0.000) CREATE EXTENSION postgis; args=()
2013-11-03 23:06:15,247 [DEBUG] django.db.backends: (0.001) SELECT "south_migrationhistory"."id", "south_migrationhistory"."app_name", "south_migrationhistory"."migration", "south_migrationhistory"."applied" FROM "south_migrationhistory" WHERE "south_migrationhistory"."applied" IS NOT NULL ORDER BY "south_migrationhistory"."applied" ASC; args=()
2013-11-03 23:06:15,253 [DEBUG] django.db.backends: (0.001) CREATE TABLE DDL_TRANSACTION_TEST (X INT); args=()
2013-11-03 23:06:15,254 [DEBUG] django.db.backends: (0.000) CREATE TABLE DDL_TRANSACTION_TEST (X INT); args=()
2013-11-03 23:06:15,255 [DEBUG] django.db.backends: (0.000) DROP TABLE DDL_TRANSACTION_TEST; args=()
2013-11-03 23:06:15,259 [DEBUG] south: execute "CREATE TABLE "tour_config_tourconfig" ("id" serial NOT NULL PRIMARY KEY, "tour_name" varchar(256) NOT NULL, "tour_logo" varchar(200) NOT NULL, "tour_id" varchar(64) NOT NULL UNIQUE, "tour_organization" varchar(256) NOT NULL, "dcs_url" varchar(200) NOT NULL, "gcm_sender_id" varchar(64) NOT NULL, "start_time" integer CHECK ("start_time" >= 0) NOT NULL, "max_tour_time" integer CHECK ("max_tour_time" >= 0) NOT NULL, "is_cancelled" boolean NOT NULL, "tour_route_id" integer NULL);" with params "[]"
2013-11-03 23:06:15,261 [DEBUG] django.db.backends: (0.001) CREATE TABLE "tour_config_tourconfig" ("id" serial NOT NULL PRIMARY KEY, "tour_name" varchar(256) NOT NULL, "tour_logo" varchar(200) NOT NULL, "tour_id" varchar(64) NOT NULL UNIQUE, "tour_organization" varchar(256) NOT NULL, "dcs_url" varchar(200) NOT NULL, "gcm_sender_id" varchar(64) NOT NULL, "start_time" integer CHECK ("start_time" >= 0) NOT NULL, "max_tour_time" integer CHECK ("max_tour_time" >= 0) NOT NULL, "is_cancelled" boolean NOT NULL, "tour_route_id" integer NULL);; args=[]
2013-11-03 23:11:09,411 [DEBUG] django.db.backends: (0.000) SELECT "south_migrationhistory"."id", "south_migrationhistory"."app_name", "south_migrationhistory"."migration", "south_migrationhistory"."applied" FROM "south_migrationhistory" WHERE "south_migrationhistory"."applied" IS NOT NULL ORDER BY "south_migrationhistory"."applied" ASC; args=()
2013-11-03 23:12:03,350 [DEBUG] django.db.backends: (0.019) 
            SELECT c.relname
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('r', 'v', '')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid); args=()
2013-11-03 23:12:03,400 [DEBUG] django.db.backends: (0.048) CREATE TABLE "auth_permission" (
    "id" serial NOT NULL PRIMARY KEY,
    "name" varchar(50) NOT NULL,
    "content_type_id" integer NOT NULL,
    "codename" varchar(100) NOT NULL,
    UNIQUE ("content_type_id", "codename")
)
;; args=()
2013-11-03 23:12:03,446 [DEBUG] django.db.backends: (0.045) CREATE TABLE "auth_group_permissions" (
    "id" serial NOT NULL PRIMARY KEY,
    "group_id" integer NOT NULL,
    "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED,
    UNIQUE ("group_id", "permission_id")
)
;; args=()
2013-11-03 23:12:03,463 [DEBUG] django.db.backends: (0.017) CREATE TABLE "auth_group" (
    "id" serial NOT NULL PRIMARY KEY,
    "name" varchar(80) NOT NULL UNIQUE
)
;; args=()
2013-11-03 23:12:03,471 [DEBUG] django.db.backends: (0.007) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "group_id_refs_id_f4b32aac" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED;; args=()
2013-11-03 23:12:03,481 [DEBUG] django.db.backends: (0.009) CREATE TABLE "auth_user_groups" (
    "id" serial NOT NULL PRIMARY KEY,
    "user_id" integer NOT NULL,
    "group_id" integer NOT NULL REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED,
    UNIQUE ("user_id", "group_id")
)
;; args=()
2013-11-03 23:12:03,489 [DEBUG] django.db.backends: (0.008) CREATE TABLE "auth_user_user_permissions" (
    "id" serial NOT NULL PRIMARY KEY,
    "user_id" integer NOT NULL,
    "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED,
    UNIQUE ("user_id", "permission_id")
)
;; args=()
2013-11-03 23:12:03,498 [DEBUG] django.db.backends: (0.008) CREATE TABLE "auth_user" (
    "id" serial NOT NULL PRIMARY KEY,
    "password" varchar(128) NOT NULL,
    "last_login" timestamp with time zone NOT NULL,
    "is_superuser" boolean NOT NULL,
    "username" varchar(30) NOT NULL UNIQUE,
    "first_name" varchar(30) NOT NULL,
    "last_name" varchar(30) NOT NULL,
    "email" varchar(75) NOT NULL,
    "is_staff" boolean NOT NULL,
    "is_active" boolean NOT NULL,
    "date_joined" timestamp with time zone NOT NULL
)
;; args=()
2013-11-03 23:12:03,500 [DEBUG] django.db.backends: (0.002) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "user_id_refs_id_40c41112" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED;; args=()
2013-11-03 23:12:03,502 [DEBUG] django.db.backends: (0.002) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "user_id_refs_id_4dc23c39" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED;; args=()
2013-11-03 23:12:03,510 [DEBUG] django.db.backends: (0.008) CREATE TABLE "django_content_type" (
    "id" serial NOT NULL PRIMARY KEY,
    "name" varchar(100) NOT NULL,
    "app_label" varchar(100) NOT NULL,
    "model" varchar(100) NOT NULL,
    UNIQUE ("app_label", "model")
)
;; args=()
2013-11-03 23:12:03,512 [DEBUG] django.db.backends: (0.002) ALTER TABLE "auth_permission" ADD CONSTRAINT "content_type_id_refs_id_d043b34a" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED;; args=()
2013-11-03 23:12:03,531 [DEBUG] django.db.backends: (0.018) CREATE TABLE "django_session" (
    "session_key" varchar(40) NOT NULL PRIMARY KEY,
    "session_data" text NOT NULL,
    "expire_date" timestamp with time zone NOT NULL
)
;; args=()
2013-11-03 23:12:03,538 [DEBUG] django.db.backends: (0.007) CREATE TABLE "django_site" (
    "id" serial NOT NULL PRIMARY KEY,
    "domain" varchar(100) NOT NULL,
    "name" varchar(50) NOT NULL
)
;; args=()
2013-11-03 23:12:03,557 [DEBUG] django.db.backends: (0.018) CREATE TABLE "south_migrationhistory" (
    "id" serial NOT NULL PRIMARY KEY,
    "app_name" varchar(255) NOT NULL,
    "migration" varchar(255) NOT NULL,
    "applied" timestamp with time zone NOT NULL
)
;; args=()
2013-11-03 23:12:03,568 [DEBUG] django.db.backends: (0.010) CREATE TABLE "django_admin_log" (
    "id" serial NOT NULL PRIMARY KEY,
    "action_time" timestamp with time zone NOT NULL,
    "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED,
    "content_type_id" integer REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED,
    "object_id" text,
    "object_repr" varchar(200) NOT NULL,
    "action_flag" smallint CHECK ("action_flag" >= 0) NOT NULL,
    "change_message" text NOT NULL
)
;; args=()
2013-11-03 23:12:03,573 [DEBUG] django.db.backends: (0.001) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'permission'  AND "django_content_type"."app_label" = 'auth' ); args=('permission', u'auth')
2013-11-03 23:12:03,573 [DEBUG] django.db.backends: (0.000) SAVEPOINT s1221952768_x1; args=()
2013-11-03 23:12:03,574 [DEBUG] django.db.backends: (0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('permission', 'auth', 'permission') RETURNING "django_content_type"."id"; args=(u'permission', u'auth', 'permission')
2013-11-03 23:12:03,576 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'group'  AND "django_content_type"."app_label" = 'auth' ); args=('group', u'auth')
2013-11-03 23:12:03,576 [DEBUG] django.db.backends: (0.000) SAVEPOINT s1221952768_x1; args=()
2013-11-03 23:12:03,576 [DEBUG] django.db.backends: (0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('group', 'auth', 'group') RETURNING "django_content_type"."id"; args=(u'group', u'auth', 'group')
2013-11-03 23:12:03,578 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'user'  AND "django_content_type"."app_label" = 'auth' ); args=('user', u'auth')
2013-11-03 23:12:03,578 [DEBUG] django.db.backends: (0.000) SAVEPOINT s1221952768_x1; args=()
2013-11-03 23:12:03,579 [DEBUG] django.db.backends: (0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('user', 'auth', 'user') RETURNING "django_content_type"."id"; args=(u'user', u'auth', 'user')
2013-11-03 23:12:03,581 [DEBUG] django.db.backends: (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1, 2, 3) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1, 2, 3)
2013-11-03 23:12:03,582 [DEBUG] django.db.backends: (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add permission', 1, 'add_permission'), ('Can change permission', 1, 'change_permission'), ('Can delete permission', 1, 'delete_permission'), ('Can add group', 2, 'add_group'), ('Can change group', 2, 'change_group'), ('Can delete group', 2, 'delete_group'), ('Can add user', 3, 'add_user'), ('Can change user', 3, 'change_user'), ('Can delete user', 3, 'delete_user'); args=(u'Can add permission', 1, u'add_permission', u'Can change permission', 1, u'change_permission', u'Can delete permission', 1, u'delete_permission', u'Can add group', 2, u'add_group', u'Can change group', 2, u'change_group', u'Can delete group', 2, u'delete_group', u'Can add user', 3, u'add_user', u'Can change user', 3, u'change_user', u'Can delete user', 3, u'delete_user')
2013-11-03 23:12:10,839 [DEBUG] django.db.backends: (0.001) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'root' ; args=(u'root',)
2013-11-03 23:12:13,013 [DEBUG] django.db.backends: (0.001) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'toffer' ; args=('toffer',)
2013-11-03 23:12:21,676 [DEBUG] django.db.backends: (0.001) INSERT INTO "auth_user" ("password", "last_login", "is_superuser", "username", "first_name", "last_name", "email", "is_staff", "is_active", "date_joined") VALUES ('pbkdf2_sha256$10000$POscQmg08hwh$Mbwt9hwnP9lbyeyDncZYDhkzUJQk09V/9PYoVVfbHMo=', '2013-11-04 04:12:21.632518+00:00', false, 'toffer', '', '', '', false, true, '2013-11-04 04:12:21.632518+00:00') RETURNING "auth_user"."id"; args=(u'pbkdf2_sha256$10000$POscQmg08hwh$Mbwt9hwnP9lbyeyDncZYDhkzUJQk09V/9PYoVVfbHMo=', u'2013-11-04 04:12:21.632518+00:00', False, 'toffer', u'', u'', u'', False, True, u'2013-11-04 04:12:21.632518+00:00')
2013-11-03 23:12:21,678 [DEBUG] django.db.backends: (0.000) SELECT (1) AS "a" FROM "auth_user" WHERE "auth_user"."id" = 1  LIMIT 1; args=(1,)
2013-11-03 23:12:21,679 [DEBUG] django.db.backends: (0.000) UPDATE "auth_user" SET "password" = 'pbkdf2_sha256$10000$POscQmg08hwh$Mbwt9hwnP9lbyeyDncZYDhkzUJQk09V/9PYoVVfbHMo=', "last_login" = '2013-11-04 04:12:21.632518+00:00', "is_superuser" = true, "username" = 'toffer', "first_name" = '', "last_name" = '', "email" = '', "is_staff" = true, "is_active" = true, "date_joined" = '2013-11-04 04:12:21.632518+00:00' WHERE "auth_user"."id" = 1 ; args=(u'pbkdf2_sha256$10000$POscQmg08hwh$Mbwt9hwnP9lbyeyDncZYDhkzUJQk09V/9PYoVVfbHMo=', u'2013-11-04 04:12:21.632518+00:00', True, 'toffer', u'', u'', u'', True, True, u'2013-11-04 04:12:21.632518+00:00', 1)
2013-11-03 23:12:21,680 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'  ORDER BY "django_content_type"."name" ASC; args=(u'auth',)
2013-11-03 23:12:21,682 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'contenttype'  AND "django_content_type"."app_label" = 'contenttypes' ); args=('contenttype', u'contenttypes')
2013-11-03 23:12:21,682 [DEBUG] django.db.backends: (0.000) SAVEPOINT s1221952768_x1; args=()
2013-11-03 23:12:21,682 [DEBUG] django.db.backends: (0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('content type', 'contenttypes', 'contenttype') RETURNING "django_content_type"."id"; args=(u'content type', u'contenttypes', 'contenttype')
2013-11-03 23:12:21,684 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(4,)
2013-11-03 23:12:21,685 [DEBUG] django.db.backends: (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add content type', 4, 'add_contenttype'), ('Can change content type', 4, 'change_contenttype'), ('Can delete content type', 4, 'delete_contenttype'); args=(u'Can add content type', 4, u'add_contenttype', u'Can change content type', 4, u'change_contenttype', u'Can delete content type', 4, u'delete_contenttype')
2013-11-03 23:12:21,687 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'  ORDER BY "django_content_type"."name" ASC; args=(u'contenttypes',)
2013-11-03 23:12:21,688 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'session'  AND "django_content_type"."app_label" = 'sessions' ); args=('session', u'sessions')
2013-11-03 23:12:21,688 [DEBUG] django.db.backends: (0.000) SAVEPOINT s1221952768_x1; args=()
2013-11-03 23:12:21,688 [DEBUG] django.db.backends: (0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('session', 'sessions', 'session') RETURNING "django_content_type"."id"; args=(u'session', u'sessions', 'session')
2013-11-03 23:12:21,690 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,)
2013-11-03 23:12:21,691 [DEBUG] django.db.backends: (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add session', 5, 'add_session'), ('Can change session', 5, 'change_session'), ('Can delete session', 5, 'delete_session'); args=(u'Can add session', 5, u'add_session', u'Can change session', 5, u'change_session', u'Can delete session', 5, u'delete_session')
2013-11-03 23:12:21,692 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'  ORDER BY "django_content_type"."name" ASC; args=(u'sessions',)
2013-11-03 23:12:21,694 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'site'  AND "django_content_type"."app_label" = 'sites' ); args=('site', u'sites')
2013-11-03 23:12:21,694 [DEBUG] django.db.backends: (0.000) SAVEPOINT s1221952768_x1; args=()
2013-11-03 23:12:21,694 [DEBUG] django.db.backends: (0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('site', 'sites', 'site') RETURNING "django_content_type"."id"; args=(u'site', u'sites', 'site')
2013-11-03 23:12:21,696 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,)
2013-11-03 23:12:21,697 [DEBUG] django.db.backends: (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add site', 6, 'add_site'), ('Can change site', 6, 'change_site'), ('Can delete site', 6, 'delete_site'); args=(u'Can add site', 6, u'add_site', u'Can change site', 6, u'change_site', u'Can delete site', 6, u'delete_site')
2013-11-03 23:12:21,698 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sites'  ORDER BY "django_content_type"."name" ASC; args=(u'sites',)
2013-11-03 23:12:21,700 [DEBUG] django.db.backends: (0.000) SELECT (1) AS "a" FROM "django_site" WHERE "django_site"."id" = 1  LIMIT 1; args=(1,)
2013-11-03 23:12:21,700 [DEBUG] django.db.backends: (0.000) INSERT INTO "django_site" ("id", "domain", "name") VALUES (1, 'example.com', 'example.com'); args=(1, 'example.com', 'example.com')
2013-11-03 23:12:21,731 [DEBUG] django.db.backends: (0.030) SELECT setval(pg_get_serial_sequence('"django_site"','id'), coalesce(max("id"), 1), max("id") IS NOT null) FROM "django_site";; args=()
2013-11-03 23:12:21,739 [DEBUG] django.db.backends: (0.001) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'migrationhistory'  AND "django_content_type"."app_label" = 'south' ); args=('migrationhistory', u'south')
2013-11-03 23:12:21,740 [DEBUG] django.db.backends: (0.000) SAVEPOINT s1221952768_x1; args=()
2013-11-03 23:12:21,740 [DEBUG] django.db.backends: (0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('migration history', 'south', 'migrationhistory') RETURNING "django_content_type"."id"; args=(u'migration history', u'south', 'migrationhistory')
2013-11-03 23:12:21,743 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(7,)
2013-11-03 23:12:21,744 [DEBUG] django.db.backends: (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add migration history', 7, 'add_migrationhistory'), ('Can change migration history', 7, 'change_migrationhistory'), ('Can delete migration history', 7, 'delete_migrationhistory'); args=(u'Can add migration history', 7, u'add_migrationhistory', u'Can change migration history', 7, u'change_migrationhistory', u'Can delete migration history', 7, u'delete_migrationhistory')
2013-11-03 23:12:21,746 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'south'  ORDER BY "django_content_type"."name" ASC; args=(u'south',)
2013-11-03 23:12:21,747 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'logentry'  AND "django_content_type"."app_label" = 'admin' ); args=('logentry', u'admin')
2013-11-03 23:12:21,747 [DEBUG] django.db.backends: (0.000) SAVEPOINT s1221952768_x1; args=()
2013-11-03 23:12:21,748 [DEBUG] django.db.backends: (0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('log entry', 'admin', 'logentry') RETURNING "django_content_type"."id"; args=(u'log entry', u'admin', 'logentry')
2013-11-03 23:12:21,750 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8,)
2013-11-03 23:12:21,750 [DEBUG] django.db.backends: (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add log entry', 8, 'add_logentry'), ('Can change log entry', 8, 'change_logentry'), ('Can delete log entry', 8, 'delete_logentry'); args=(u'Can add log entry', 8, u'add_logentry', u'Can change log entry', 8, u'change_logentry', u'Can delete log entry', 8, u'delete_logentry')
2013-11-03 23:12:21,752 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'  ORDER BY "django_content_type"."name" ASC; args=(u'admin',)
2013-11-03 23:12:21,763 [DEBUG] django.db.backends: (0.010) CREATE INDEX "auth_permission_content_type_id" ON "auth_permission" ("content_type_id");; args=()
2013-11-03 23:12:21,767 [DEBUG] django.db.backends: (0.003) CREATE INDEX "auth_group_permissions_group_id" ON "auth_group_permissions" ("group_id");; args=()
2013-11-03 23:12:21,770 [DEBUG] django.db.backends: (0.002) CREATE INDEX "auth_group_permissions_permission_id" ON "auth_group_permissions" ("permission_id");; args=()
2013-11-03 23:12:21,774 [DEBUG] django.db.backends: (0.003) CREATE INDEX "auth_group_name_like" ON "auth_group" ("name" varchar_pattern_ops);; args=()
2013-11-03 23:12:21,778 [DEBUG] django.db.backends: (0.003) CREATE INDEX "auth_user_groups_user_id" ON "auth_user_groups" ("user_id");; args=()
2013-11-03 23:12:21,781 [DEBUG] django.db.backends: (0.002) CREATE INDEX "auth_user_groups_group_id" ON "auth_user_groups" ("group_id");; args=()
2013-11-03 23:12:21,785 [DEBUG] django.db.backends: (0.003) CREATE INDEX "auth_user_user_permissions_user_id" ON "auth_user_user_permissions" ("user_id");; args=()
2013-11-03 23:12:21,788 [DEBUG] django.db.backends: (0.003) CREATE INDEX "auth_user_user_permissions_permission_id" ON "auth_user_user_permissions" ("permission_id");; args=()
2013-11-03 23:12:21,792 [DEBUG] django.db.backends: (0.003) CREATE INDEX "auth_user_username_like" ON "auth_user" ("username" varchar_pattern_ops);; args=()
2013-11-03 23:12:21,796 [DEBUG] django.db.backends: (0.003) CREATE INDEX "django_session_session_key_like" ON "django_session" ("session_key" varchar_pattern_ops);; args=()
2013-11-03 23:12:21,800 [DEBUG] django.db.backends: (0.003) CREATE INDEX "django_session_expire_date" ON "django_session" ("expire_date");; args=()
2013-11-03 23:12:21,804 [DEBUG] django.db.backends: (0.003) CREATE INDEX "django_admin_log_user_id" ON "django_admin_log" ("user_id");; args=()
2013-11-03 23:12:21,807 [DEBUG] django.db.backends: (0.002) CREATE INDEX "django_admin_log_content_type_id" ON "django_admin_log" ("content_type_id");; args=()
2013-11-03 23:12:21,816 [DEBUG] django.db.backends: (0.000) SET CONSTRAINTS ALL IMMEDIATE; args=()
2013-11-03 23:12:21,816 [DEBUG] django.db.backends: (0.000) SET CONSTRAINTS ALL DEFERRED; args=()
2013-11-03 23:12:38,027 [DEBUG] django.db.backends: (0.001) SELECT "south_migrationhistory"."id", "south_migrationhistory"."app_name", "south_migrationhistory"."migration", "south_migrationhistory"."applied" FROM "south_migrationhistory" WHERE "south_migrationhistory"."applied" IS NOT NULL ORDER BY "south_migrationhistory"."applied" ASC; args=()
2013-11-03 23:12:38,032 [DEBUG] django.db.backends: (0.001) CREATE TABLE DDL_TRANSACTION_TEST (X INT); args=()
2013-11-03 23:12:38,033 [DEBUG] django.db.backends: (0.000) CREATE TABLE DDL_TRANSACTION_TEST (X INT); args=()
2013-11-03 23:12:38,053 [DEBUG] django.db.backends: (0.020) DROP TABLE DDL_TRANSACTION_TEST; args=()
2013-11-03 23:12:38,065 [DEBUG] south: execute "CREATE TABLE "tour_config_tourconfig" ("id" serial NOT NULL PRIMARY KEY, "tour_name" varchar(256) NOT NULL, "tour_logo" varchar(200) NOT NULL, "tour_id" varchar(256) NOT NULL, "tour_organization" varchar(256) NOT NULL, "dcs_url" varchar(200) NOT NULL, "gcm_sender_id" varchar(64) NOT NULL, "start_time" timestamp with time zone NOT NULL, "is_cancelled" boolean NOT NULL, "max_tour_time" timestamp with time zone NOT NULL, "tour_route_id" integer NOT NULL);" with params "[]"
2013-11-03 23:12:38,078 [DEBUG] django.db.backends: (0.012) CREATE TABLE "tour_config_tourconfig" ("id" serial NOT NULL PRIMARY KEY, "tour_name" varchar(256) NOT NULL, "tour_logo" varchar(200) NOT NULL, "tour_id" varchar(256) NOT NULL, "tour_organization" varchar(256) NOT NULL, "dcs_url" varchar(200) NOT NULL, "gcm_sender_id" varchar(64) NOT NULL, "start_time" timestamp with time zone NOT NULL, "is_cancelled" boolean NOT NULL, "max_tour_time" timestamp with time zone NOT NULL, "tour_route_id" integer NOT NULL);; args=[]
2013-11-03 23:12:38,079 [DEBUG] south: execute "CREATE TABLE "tour_config_tourroute" ("id" serial NOT NULL PRIMARY KEY, "name" varchar(64) NOT NULL);" with params "[]"
2013-11-03 23:12:38,085 [DEBUG] django.db.backends: (0.005) CREATE TABLE "tour_config_tourroute" ("id" serial NOT NULL PRIMARY KEY, "name" varchar(64) NOT NULL);; args=[]
2013-11-03 23:12:38,085 [DEBUG] south: execute "ALTER TABLE "tour_config_tourconfig" ADD CONSTRAINT "tour_route_id_refs_id_6f5530a9" FOREIGN KEY ("tour_route_id") REFERENCES "tour_config_tourroute" ("id") DEFERRABLE INITIALLY DEFERRED;" with params "[]"
2013-11-03 23:12:38,088 [DEBUG] django.db.backends: (0.003) ALTER TABLE "tour_config_tourconfig" ADD CONSTRAINT "tour_route_id_refs_id_6f5530a9" FOREIGN KEY ("tour_route_id") REFERENCES "tour_config_tourroute" ("id") DEFERRABLE INITIALLY DEFERRED;; args=[]
2013-11-03 23:12:38,088 [DEBUG] south: execute "CREATE INDEX "tour_config_tourconfig_tour_route_id" ON "tour_config_tourconfig" ("tour_route_id");" with params "[]"
2013-11-03 23:12:38,092 [DEBUG] django.db.backends: (0.003) CREATE INDEX "tour_config_tourconfig_tour_route_id" ON "tour_config_tourconfig" ("tour_route_id");; args=[]
2013-11-03 23:12:38,092 [DEBUG] south: execute "SELECT AddGeometryColumn('tour_config_tourroute', 'route', 4326, 'MULTILINESTRING', 2);" with params "[]"
2013-11-03 23:12:38,163 [DEBUG] django.db.backends: (0.071) SELECT AddGeometryColumn('tour_config_tourroute', 'route', 4326, 'MULTILINESTRING', 2);; args=[]
2013-11-03 23:12:38,164 [DEBUG] south: execute "ALTER TABLE "tour_config_tourroute" ALTER "route" SET NOT NULL;" with params "[]"
2013-11-03 23:12:38,165 [DEBUG] django.db.backends: (0.001) ALTER TABLE "tour_config_tourroute" ALTER "route" SET NOT NULL;; args=[]
2013-11-03 23:12:38,165 [DEBUG] south: execute "CREATE INDEX "tour_config_tourroute_route_id" ON "tour_config_tourroute" USING GIST ( "route" GIST_GEOMETRY_OPS );" with params "[]"
2013-11-03 23:12:38,173 [DEBUG] django.db.backends: (0.008) CREATE INDEX "tour_config_tourroute_route_id" ON "tour_config_tourroute" USING GIST ( "route" GIST_GEOMETRY_OPS );; args=[]
2013-11-03 23:12:38,178 [DEBUG] django.db.backends: (0.001) SELECT "south_migrationhistory"."id", "south_migrationhistory"."app_name", "south_migrationhistory"."migration", "south_migrationhistory"."applied" FROM "south_migrationhistory" WHERE ("south_migrationhistory"."app_name" = 'tour_config'  AND "south_migrationhistory"."migration" = '0001_initial' ); args=('tour_config', '0001_initial')
2013-11-03 23:12:38,179 [DEBUG] django.db.backends: (0.001) INSERT INTO "south_migrationhistory" ("app_name", "migration", "applied") VALUES ('tour_config', '0001_initial', '2013-11-04 04:12:38.178526+00:00') RETURNING "south_migrationhistory"."id"; args=('tour_config', '0001_initial', u'2013-11-04 04:12:38.178526+00:00')
2013-11-03 23:12:38,186 [DEBUG] south: execute "
                SELECT kc.constraint_name, kc.column_name, c.constraint_type
                FROM information_schema.constraint_column_usage AS kc
                JOIN information_schema.table_constraints AS c ON
                    kc.table_schema = c.table_schema AND
                    kc.table_name = c.table_name AND
                    kc.constraint_name = c.constraint_name
                WHERE
                    kc.table_schema = %s AND
                    kc.table_name = %s
            " with params "['public', 'tour_config_tourconfig']"
2013-11-03 23:12:38,298 [DEBUG] django.db.backends: (0.112) 
                SELECT kc.constraint_name, kc.column_name, c.constraint_type
                FROM information_schema.constraint_column_usage AS kc
                JOIN information_schema.table_constraints AS c ON
                    kc.table_schema = c.table_schema AND
                    kc.table_name = c.table_name AND
                    kc.constraint_name = c.constraint_name
                WHERE
                    kc.table_schema = 'public' AND
                    kc.table_name = 'tour_config_tourconfig'
            ; args=['public', 'tour_config_tourconfig']
2013-11-03 23:12:38,298 [DEBUG] south: execute "
                SELECT kc.constraint_name, kc.column_name, c.constraint_type
                FROM information_schema.key_column_usage AS kc
                JOIN information_schema.table_constraints AS c ON
                    kc.table_schema = c.table_schema AND
                    kc.table_name = c.table_name AND
                    kc.constraint_name = c.constraint_name
                WHERE
                    kc.table_schema = %s AND
                    kc.table_name = %s
            " with params "['public', 'tour_config_tourconfig']"
2013-11-03 23:12:38,336 [DEBUG] django.db.backends: (0.037) 
                SELECT kc.constraint_name, kc.column_name, c.constraint_type
                FROM information_schema.key_column_usage AS kc
                JOIN information_schema.table_constraints AS c ON
                    kc.table_schema = c.table_schema AND
                    kc.table_name = c.table_name AND
                    kc.constraint_name = c.constraint_name
                WHERE
                    kc.table_schema = 'public' AND
                    kc.table_name = 'tour_config_tourconfig'
            ; args=['public', 'tour_config_tourconfig']
2013-11-03 23:12:38,337 [DEBUG] south: execute "
                SELECT kc.constraint_name, kc.column_name, c.constraint_type
                FROM information_schema.constraint_column_usage AS kc
                JOIN information_schema.table_constraints AS c ON
                    kc.table_schema = c.table_schema AND
                    kc.table_name = c.table_name AND
                    kc.constraint_name = c.constraint_name
                WHERE
                    kc.table_schema = %s AND
                    kc.table_name = %s
            " with params "['public', 'tour_config_tourconfig']"
2013-11-03 23:12:38,356 [DEBUG] django.db.backends: (0.019) 
                SELECT kc.constraint_name, kc.column_name, c.constraint_type
                FROM information_schema.constraint_column_usage AS kc
                JOIN information_schema.table_constraints AS c ON
                    kc.table_schema = c.table_schema AND
                    kc.table_name = c.table_name AND
                    kc.constraint_name = c.constraint_name
                WHERE
                    kc.table_schema = 'public' AND
                    kc.table_name = 'tour_config_tourconfig'
            ; args=['public', 'tour_config_tourconfig']
2013-11-03 23:12:38,356 [DEBUG] south: execute "
                SELECT kc.constraint_name, kc.column_name, c.constraint_type
                FROM information_schema.key_column_usage AS kc
                JOIN information_schema.table_constraints AS c ON
                    kc.table_schema = c.table_schema AND
                    kc.table_name = c.table_name AND
                    kc.constraint_name = c.constraint_name
                WHERE
                    kc.table_schema = %s AND
                    kc.table_name = %s
            " with params "['public', 'tour_config_tourconfig']"
2013-11-03 23:12:38,359 [DEBUG] django.db.backends: (0.002) 
                SELECT kc.constraint_name, kc.column_name, c.constraint_type
                FROM information_schema.key_column_usage AS kc
                JOIN information_schema.table_constraints AS c ON
                    kc.table_schema = c.table_schema AND
                    kc.table_name = c.table_name AND
                    kc.constraint_name = c.constraint_name
                WHERE
                    kc.table_schema = 'public' AND
                    kc.table_name = 'tour_config_tourconfig'
            ; args=['public', 'tour_config_tourconfig']
2013-11-03 23:12:38,359 [DEBUG] south: execute "ALTER TABLE "tour_config_tourconfig" ALTER COLUMN "tour_id" TYPE varchar(256), ALTER COLUMN "tour_id" SET NOT NULL, ALTER COLUMN "tour_id" DROP DEFAULT;" with params "[]"
2013-11-03 23:12:38,360 [DEBUG] django.db.backends: (0.000) ALTER TABLE "tour_config_tourconfig" ALTER COLUMN "tour_id" TYPE varchar(256), ALTER COLUMN "tour_id" SET NOT NULL, ALTER COLUMN "tour_id" DROP DEFAULT;; args=[]
2013-11-03 23:12:38,360 [DEBUG] south: execute "CREATE INDEX "tour_config_tourconfig_tour_id" ON "tour_config_tourconfig" ("tour_id");" with params "[]"
2013-11-03 23:12:38,363 [DEBUG] django.db.backends: (0.003) CREATE INDEX "tour_config_tourconfig_tour_id" ON "tour_config_tourconfig" ("tour_id");; args=[]
2013-11-03 23:12:38,365 [DEBUG] django.db.backends: (0.000) SELECT "south_migrationhistory"."id", "south_migrationhistory"."app_name", "south_migrationhistory"."migration", "south_migrationhistory"."applied" FROM "south_migrationhistory" WHERE ("south_migrationhistory"."app_name" = 'tour_config'  AND "south_migrationhistory"."migration" = '0002_TourConfig' ); args=('tour_config', '0002_TourConfig')
2013-11-03 23:12:38,365 [DEBUG] django.db.backends: (0.000) INSERT INTO "south_migrationhistory" ("app_name", "migration", "applied") VALUES ('tour_config', '0002_TourConfig', '2013-11-04 04:12:38.365339+00:00') RETURNING "south_migrationhistory"."id"; args=('tour_config', '0002_TourConfig', u'2013-11-04 04:12:38.365339+00:00')
2013-11-03 23:12:38,368 [DEBUG] south: execute "
                SELECT kc.constraint_name, kc.column_name, c.constraint_type
                FROM information_schema.constraint_column_usage AS kc
                JOIN information_schema.table_constraints AS c ON
                    kc.table_schema = c.table_schema AND
                    kc.table_name = c.table_name AND
                    kc.constraint_name = c.constraint_name
                WHERE
                    kc.table_schema = %s AND
                    kc.table_name = %s
            " with params "['public', 'tour_config_tourconfig']"
2013-11-03 23:12:38,377 [DEBUG] django.db.backends: (0.009) 
                SELECT kc.constraint_name, kc.column_name, c.constraint_type
                FROM information_schema.constraint_column_usage AS kc
                JOIN information_schema.table_constraints AS c ON
                    kc.table_schema = c.table_schema AND
                    kc.table_name = c.table_name AND
                    kc.constraint_name = c.constraint_name
                WHERE
                    kc.table_schema = 'public' AND
                    kc.table_name = 'tour_config_tourconfig'
            ; args=['public', 'tour_config_tourconfig']
2013-11-03 23:12:38,377 [DEBUG] south: execute "
                SELECT kc.constraint_name, kc.column_name, c.constraint_type
                FROM information_schema.key_column_usage AS kc
                JOIN information_schema.table_constraints AS c ON
                    kc.table_schema = c.table_schema AND
                    kc.table_name = c.table_name AND
                    kc.constraint_name = c.constraint_name
                WHERE
                    kc.table_schema = %s AND
                    kc.table_name = %s
            " with params "['public', 'tour_config_tourconfig']"
2013-11-03 23:12:38,380 [DEBUG] django.db.backends: (0.002) 
                SELECT kc.constraint_name, kc.column_name, c.constraint_type
                FROM information_schema.key_column_usage AS kc
                JOIN information_schema.table_constraints AS c ON
                    kc.table_schema = c.table_schema AND
                    kc.table_name = c.table_name AND
                    kc.constraint_name = c.constraint_name
                WHERE
                    kc.table_schema = 'public' AND
                    kc.table_name = 'tour_config_tourconfig'
            ; args=['public', 'tour_config_tourconfig']
2013-11-03 23:12:38,380 [DEBUG] south: execute "
                SELECT kc.constraint_name, kc.column_name, c.constraint_type
                FROM information_schema.constraint_column_usage AS kc
                JOIN information_schema.table_constraints AS c ON
                    kc.table_schema = c.table_schema AND
                    kc.table_name = c.table_name AND
                    kc.constraint_name = c.constraint_name
                WHERE
                    kc.table_schema = %s AND
                    kc.table_name = %s
            " with params "['public', 'tour_config_tourconfig']"
2013-11-03 23:12:38,388 [DEBUG] django.db.backends: (0.008) 
                SELECT kc.constraint_name, kc.column_name, c.constraint_type
                FROM information_schema.constraint_column_usage AS kc
                JOIN information_schema.table_constraints AS c ON
                    kc.table_schema = c.table_schema AND
                    kc.table_name = c.table_name AND
                    kc.constraint_name = c.constraint_name
                WHERE
                    kc.table_schema = 'public' AND
                    kc.table_name = 'tour_config_tourconfig'
            ; args=['public', 'tour_config_tourconfig']
2013-11-03 23:12:38,389 [DEBUG] south: execute "
                SELECT kc.constraint_name, kc.column_name, c.constraint_type
                FROM information_schema.key_column_usage AS kc
                JOIN information_schema.table_constraints AS c ON
                    kc.table_schema = c.table_schema AND
                    kc.table_name = c.table_name AND
                    kc.constraint_name = c.constraint_name
                WHERE
                    kc.table_schema = %s AND
                    kc.table_name = %s
            " with params "['public', 'tour_config_tourconfig']"
2013-11-03 23:12:38,391 [DEBUG] django.db.backends: (0.002) 
                SELECT kc.constraint_name, kc.column_name, c.constraint_type
                FROM information_schema.key_column_usage AS kc
                JOIN information_schema.table_constraints AS c ON
                    kc.table_schema = c.table_schema AND
                    kc.table_name = c.table_name AND
                    kc.constraint_name = c.constraint_name
                WHERE
                    kc.table_schema = 'public' AND
                    kc.table_name = 'tour_config_tourconfig'
            ; args=['public', 'tour_config_tourconfig']
2013-11-03 23:12:38,391 [DEBUG] south: execute "ALTER TABLE "tour_config_tourconfig" ALTER COLUMN "tour_id" TYPE varchar(64), ALTER COLUMN "tour_id" SET NOT NULL, ALTER COLUMN "tour_id" DROP DEFAULT;" with params "[]"
2013-11-03 23:12:38,402 [DEBUG] django.db.backends: (0.010) ALTER TABLE "tour_config_tourconfig" ALTER COLUMN "tour_id" TYPE varchar(64), ALTER COLUMN "tour_id" SET NOT NULL, ALTER COLUMN "tour_id" DROP DEFAULT;; args=[]
2013-11-03 23:12:38,402 [DEBUG] south: execute "ALTER TABLE "tour_config_tourconfig" ADD CONSTRAINT "tour_config_tourconfig_tour_id_uniq" UNIQUE ("tour_id")" with params "[]"
2013-11-03 23:12:38,405 [DEBUG] django.db.backends: (0.003) ALTER TABLE "tour_config_tourconfig" ADD CONSTRAINT "tour_config_tourconfig_tour_id_uniq" UNIQUE ("tour_id"); args=[]
2013-11-03 23:12:38,410 [DEBUG] django.db.backends: (0.001) SELECT "south_migrationhistory"."id", "south_migrationhistory"."app_name", "south_migrationhistory"."migration", "south_migrationhistory"."applied" FROM "south_migrationhistory" WHERE ("south_migrationhistory"."app_name" = 'tour_config'  AND "south_migrationhistory"."migration" = '0003_TourConfig' ); args=('tour_config', '0003_TourConfig')
2013-11-03 23:12:38,411 [DEBUG] django.db.backends: (0.000) INSERT INTO "south_migrationhistory" ("app_name", "migration", "applied") VALUES ('tour_config', '0003_TourConfig', '2013-11-04 04:12:38.410624+00:00') RETURNING "south_migrationhistory"."id"; args=('tour_config', '0003_TourConfig', u'2013-11-04 04:12:38.410624+00:00')
2013-11-03 23:12:38,414 [DEBUG] south: execute "ALTER TABLE "tour_config_tourconfig" DROP COLUMN "start_time" CASCADE;" with params "[]"
2013-11-03 23:12:38,415 [DEBUG] django.db.backends: (0.000) ALTER TABLE "tour_config_tourconfig" DROP COLUMN "start_time" CASCADE;; args=[]
2013-11-03 23:12:38,415 [DEBUG] south: execute "ALTER TABLE "tour_config_tourconfig" DROP COLUMN "max_tour_time" CASCADE;" with params "[]"
2013-11-03 23:12:38,415 [DEBUG] django.db.backends: (0.000) ALTER TABLE "tour_config_tourconfig" DROP COLUMN "max_tour_time" CASCADE;; args=[]
2013-11-03 23:12:38,415 [DEBUG] south: execute "ALTER TABLE "tour_config_tourconfig" ADD COLUMN "start_time_new" integer CHECK ("start_time_new" >= 0) NOT NULL DEFAULT 0;" with params "[]"
2013-11-03 23:12:38,428 [DEBUG] django.db.backends: (0.012) ALTER TABLE "tour_config_tourconfig" ADD COLUMN "start_time_new" integer CHECK ("start_time_new" >= 0) NOT NULL DEFAULT 0;; args=[]
2013-11-03 23:12:38,428 [DEBUG] south: execute "ALTER TABLE "tour_config_tourconfig" ALTER COLUMN "start_time_new" TYPE integer, ADD CONSTRAINT CK_start_time_new_PSTV_1a6119b7 CHECK ("start_time_new" >= 0), ALTER COLUMN "start_time_new" SET NOT NULL, ALTER COLUMN "start_time_new" DROP DEFAULT;" with params "[]"
2013-11-03 23:12:38,429 [DEBUG] django.db.backends: (0.001) ALTER TABLE "tour_config_tourconfig" ALTER COLUMN "start_time_new" TYPE integer, ADD CONSTRAINT CK_start_time_new_PSTV_1a6119b7 CHECK ("start_time_new" >= 0), ALTER COLUMN "start_time_new" SET NOT NULL, ALTER COLUMN "start_time_new" DROP DEFAULT;; args=[]
2013-11-03 23:12:38,429 [DEBUG] south: execute "ALTER TABLE "tour_config_tourconfig" ADD COLUMN "max_tour_time_new" integer CHECK ("max_tour_time_new" >= 0) NOT NULL DEFAULT 0;" with params "[]"
2013-11-03 23:12:38,454 [DEBUG] django.db.backends: (0.025) ALTER TABLE "tour_config_tourconfig" ADD COLUMN "max_tour_time_new" integer CHECK ("max_tour_time_new" >= 0) NOT NULL DEFAULT 0;; args=[]
2013-11-03 23:12:38,455 [DEBUG] south: execute "ALTER TABLE "tour_config_tourconfig" ALTER COLUMN "max_tour_time_new" TYPE integer, ADD CONSTRAINT CK_max_tour_time_new_PSTV_2f34dadd CHECK ("max_tour_time_new" >= 0), ALTER COLUMN "max_tour_time_new" SET NOT NULL, ALTER COLUMN "max_tour_time_new" DROP DEFAULT;" with params "[]"
2013-11-03 23:12:38,456 [DEBUG] django.db.backends: (0.001) ALTER TABLE "tour_config_tourconfig" ALTER COLUMN "max_tour_time_new" TYPE integer, ADD CONSTRAINT CK_max_tour_time_new_PSTV_2f34dadd CHECK ("max_tour_time_new" >= 0), ALTER COLUMN "max_tour_time_new" SET NOT NULL, ALTER COLUMN "max_tour_time_new" DROP DEFAULT;; args=[]
2013-11-03 23:12:38,463 [DEBUG] django.db.backends: (0.001) SELECT "south_migrationhistory"."id", "south_migrationhistory"."app_name", "south_migrationhistory"."migration", "south_migrationhistory"."applied" FROM "south_migrationhistory" WHERE ("south_migrationhistory"."app_name" = 'tour_config'  AND "south_migrationhistory"."migration" = '0004_TourConfig' ); args=('tour_config', '0004_TourConfig')
2013-11-03 23:12:38,464 [DEBUG] django.db.backends: (0.000) INSERT INTO "south_migrationhistory" ("app_name", "migration", "applied") VALUES ('tour_config', '0004_TourConfig', '2013-11-04 04:12:38.463702+00:00') RETURNING "south_migrationhistory"."id"; args=('tour_config', '0004_TourConfig', u'2013-11-04 04:12:38.463702+00:00')
2013-11-03 23:12:38,466 [DEBUG] south: execute "ALTER TABLE "tour_config_tourconfig" DROP COLUMN "start_time_new" CASCADE;" with params "[]"
2013-11-03 23:12:38,467 [DEBUG] django.db.backends: (0.001) ALTER TABLE "tour_config_tourconfig" DROP COLUMN "start_time_new" CASCADE;; args=[]
2013-11-03 23:12:38,467 [DEBUG] south: execute "ALTER TABLE "tour_config_tourconfig" DROP COLUMN "max_tour_time_new" CASCADE;" with params "[]"
2013-11-03 23:12:38,468 [DEBUG] django.db.backends: (0.000) ALTER TABLE "tour_config_tourconfig" DROP COLUMN "max_tour_time_new" CASCADE;; args=[]
2013-11-03 23:12:38,468 [DEBUG] south: execute "ALTER TABLE "tour_config_tourconfig" ADD COLUMN "start_time" integer CHECK ("start_time" >= 0) NOT NULL DEFAULT 0;" with params "[]"
2013-11-03 23:12:38,480 [DEBUG] django.db.backends: (0.012) ALTER TABLE "tour_config_tourconfig" ADD COLUMN "start_time" integer CHECK ("start_time" >= 0) NOT NULL DEFAULT 0;; args=[]
2013-11-03 23:12:38,481 [DEBUG] south: execute "ALTER TABLE "tour_config_tourconfig" ALTER COLUMN "start_time" TYPE integer, ADD CONSTRAINT CK_start_time_PSTV_3da41704 CHECK ("start_time" >= 0), ALTER COLUMN "start_time" SET NOT NULL, ALTER COLUMN "start_time" DROP DEFAULT;" with params "[]"
2013-11-03 23:12:38,483 [DEBUG] django.db.backends: (0.001) ALTER TABLE "tour_config_tourconfig" ALTER COLUMN "start_time" TYPE integer, ADD CONSTRAINT CK_start_time_PSTV_3da41704 CHECK ("start_time" >= 0), ALTER COLUMN "start_time" SET NOT NULL, ALTER COLUMN "start_time" DROP DEFAULT;; args=[]
2013-11-03 23:12:38,483 [DEBUG] south: execute "ALTER TABLE "tour_config_tourconfig" ADD COLUMN "max_tour_time" integer CHECK ("max_tour_time" >= 0) NOT NULL DEFAULT 0;" with params "[]"
2013-11-03 23:12:38,497 [DEBUG] django.db.backends: (0.014) ALTER TABLE "tour_config_tourconfig" ADD COLUMN "max_tour_time" integer CHECK ("max_tour_time" >= 0) NOT NULL DEFAULT 0;; args=[]
2013-11-03 23:12:38,497 [DEBUG] south: execute "ALTER TABLE "tour_config_tourconfig" ALTER COLUMN "max_tour_time" TYPE integer, ADD CONSTRAINT CK_max_tour_time_PSTV_35d98f50 CHECK ("max_tour_time" >= 0), ALTER COLUMN "max_tour_time" SET NOT NULL, ALTER COLUMN "max_tour_time" DROP DEFAULT;" with params "[]"
2013-11-03 23:12:38,498 [DEBUG] django.db.backends: (0.001) ALTER TABLE "tour_config_tourconfig" ALTER COLUMN "max_tour_time" TYPE integer, ADD CONSTRAINT CK_max_tour_time_PSTV_35d98f50 CHECK ("max_tour_time" >= 0), ALTER COLUMN "max_tour_time" SET NOT NULL, ALTER COLUMN "max_tour_time" DROP DEFAULT;; args=[]
2013-11-03 23:12:38,504 [DEBUG] django.db.backends: (0.001) SELECT "south_migrationhistory"."id", "south_migrationhistory"."app_name", "south_migrationhistory"."migration", "south_migrationhistory"."applied" FROM "south_migrationhistory" WHERE ("south_migrationhistory"."app_name" = 'tour_config'  AND "south_migrationhistory"."migration" = '0005_TourConfig' ); args=('tour_config', '0005_TourConfig')
2013-11-03 23:12:38,505 [DEBUG] django.db.backends: (0.000) INSERT INTO "south_migrationhistory" ("app_name", "migration", "applied") VALUES ('tour_config', '0005_TourConfig', '2013-11-04 04:12:38.504927+00:00') RETURNING "south_migrationhistory"."id"; args=('tour_config', '0005_TourConfig', u'2013-11-04 04:12:38.504927+00:00')
2013-11-03 23:12:38,510 [DEBUG] south: execute "
                SELECT kc.constraint_name, kc.column_name, c.constraint_type
                FROM information_schema.constraint_column_usage AS kc
                JOIN information_schema.table_constraints AS c ON
                    kc.table_schema = c.table_schema AND
                    kc.table_name = c.table_name AND
                    kc.constraint_name = c.constraint_name
                WHERE
                    kc.table_schema = %s AND
                    kc.table_name = %s
            " with params "['public', 'tour_config_tourconfig']"
2013-11-03 23:12:38,519 [DEBUG] django.db.backends: (0.010) 
                SELECT kc.constraint_name, kc.column_name, c.constraint_type
                FROM information_schema.constraint_column_usage AS kc
                JOIN information_schema.table_constraints AS c ON
                    kc.table_schema = c.table_schema AND
                    kc.table_name = c.table_name AND
                    kc.constraint_name = c.constraint_name
                WHERE
                    kc.table_schema = 'public' AND
                    kc.table_name = 'tour_config_tourconfig'
            ; args=['public', 'tour_config_tourconfig']
2013-11-03 23:12:38,520 [DEBUG] south: execute "
                SELECT kc.constraint_name, kc.column_name, c.constraint_type
                FROM information_schema.key_column_usage AS kc
                JOIN information_schema.table_constraints AS c ON
                    kc.table_schema = c.table_schema AND
                    kc.table_name = c.table_name AND
                    kc.constraint_name = c.constraint_name
                WHERE
                    kc.table_schema = %s AND
                    kc.table_name = %s
            " with params "['public', 'tour_config_tourconfig']"
2013-11-03 23:12:38,522 [DEBUG] django.db.backends: (0.003) 
                SELECT kc.constraint_name, kc.column_name, c.constraint_type
                FROM information_schema.key_column_usage AS kc
                JOIN information_schema.table_constraints AS c ON
                    kc.table_schema = c.table_schema AND
                    kc.table_name = c.table_name AND
                    kc.constraint_name = c.constraint_name
                WHERE
                    kc.table_schema = 'public' AND
                    kc.table_name = 'tour_config_tourconfig'
            ; args=['public', 'tour_config_tourconfig']
2013-11-03 23:12:38,523 [DEBUG] south: execute "
                SELECT kc.constraint_name, kc.column_name, c.constraint_type
                FROM information_schema.constraint_column_usage AS kc
                JOIN information_schema.table_constraints AS c ON
                    kc.table_schema = c.table_schema AND
                    kc.table_name = c.table_name AND
                    kc.constraint_name = c.constraint_name
                WHERE
                    kc.table_schema = %s AND
                    kc.table_name = %s
            " with params "['public', 'tour_config_tourconfig']"
2013-11-03 23:12:38,532 [DEBUG] django.db.backends: (0.009) 
                SELECT kc.constraint_name, kc.column_name, c.constraint_type
                FROM information_schema.constraint_column_usage AS kc
                JOIN information_schema.table_constraints AS c ON
                    kc.table_schema = c.table_schema AND
                    kc.table_name = c.table_name AND
                    kc.constraint_name = c.constraint_name
                WHERE
                    kc.table_schema = 'public' AND
                    kc.table_name = 'tour_config_tourconfig'
            ; args=['public', 'tour_config_tourconfig']
2013-11-03 23:12:38,532 [DEBUG] south: execute "
                SELECT kc.constraint_name, kc.column_name, c.constraint_type
                FROM information_schema.key_column_usage AS kc
                JOIN information_schema.table_constraints AS c ON
                    kc.table_schema = c.table_schema AND
                    kc.table_name = c.table_name AND
                    kc.constraint_name = c.constraint_name
                WHERE
                    kc.table_schema = %s AND
                    kc.table_name = %s
            " with params "['public', 'tour_config_tourconfig']"
2013-11-03 23:12:38,535 [DEBUG] django.db.backends: (0.003) 
                SELECT kc.constraint_name, kc.column_name, c.constraint_type
                FROM information_schema.key_column_usage AS kc
                JOIN information_schema.table_constraints AS c ON
                    kc.table_schema = c.table_schema AND
                    kc.table_name = c.table_name AND
                    kc.constraint_name = c.constraint_name
                WHERE
                    kc.table_schema = 'public' AND
                    kc.table_name = 'tour_config_tourconfig'
            ; args=['public', 'tour_config_tourconfig']
2013-11-03 23:12:38,535 [DEBUG] south: execute "ALTER TABLE "tour_config_tourconfig" DROP CONSTRAINT "tour_route_id_refs_id_6f5530a9"" with params "[]"
2013-11-03 23:12:38,536 [DEBUG] django.db.backends: (0.000) ALTER TABLE "tour_config_tourconfig" DROP CONSTRAINT "tour_route_id_refs_id_6f5530a9"; args=[]
2013-11-03 23:12:38,536 [DEBUG] south: execute "ALTER TABLE "tour_config_tourconfig" ALTER COLUMN "tour_route_id" TYPE integer, ALTER COLUMN "tour_route_id" DROP NOT NULL, ALTER COLUMN "tour_route_id" DROP DEFAULT;" with params "[]"
2013-11-03 23:12:38,539 [DEBUG] django.db.backends: (0.003) ALTER TABLE "tour_config_tourconfig" ALTER COLUMN "tour_route_id" TYPE integer, ALTER COLUMN "tour_route_id" DROP NOT NULL, ALTER COLUMN "tour_route_id" DROP DEFAULT;; args=[]
2013-11-03 23:12:38,539 [DEBUG] south: execute "ALTER TABLE "tour_config_tourconfig" ADD CONSTRAINT "tour_route_id_refs_id_6f5530a9" FOREIGN KEY ("tour_route_id") REFERENCES "tour_config_tourroute" ("id") DEFERRABLE INITIALLY DEFERRED;" with params "[]"
2013-11-03 23:12:38,540 [DEBUG] django.db.backends: (0.001) ALTER TABLE "tour_config_tourconfig" ADD CONSTRAINT "tour_route_id_refs_id_6f5530a9" FOREIGN KEY ("tour_route_id") REFERENCES "tour_config_tourroute" ("id") DEFERRABLE INITIALLY DEFERRED;; args=[]
2013-11-03 23:12:38,542 [DEBUG] django.db.backends: (0.000) SELECT "south_migrationhistory"."id", "south_migrationhistory"."app_name", "south_migrationhistory"."migration", "south_migrationhistory"."applied" FROM "south_migrationhistory" WHERE ("south_migrationhistory"."app_name" = 'tour_config'  AND "south_migrationhistory"."migration" = '0006_TourConfig' ); args=('tour_config', '0006_TourConfig')
2013-11-03 23:12:38,543 [DEBUG] django.db.backends: (0.000) INSERT INTO "south_migrationhistory" ("app_name", "migration", "applied") VALUES ('tour_config', '0006_TourConfig', '2013-11-04 04:12:38.543118+00:00') RETURNING "south_migrationhistory"."id"; args=('tour_config', '0006_TourConfig', u'2013-11-04 04:12:38.543118+00:00')
2013-11-03 23:12:38,547 [DEBUG] south: execute "CREATE TABLE "tour_config_tourconfig" ("id" serial NOT NULL PRIMARY KEY, "tour_name" varchar(256) NOT NULL, "tour_logo" varchar(200) NOT NULL, "tour_id" varchar(64) NOT NULL UNIQUE, "tour_organization" varchar(256) NOT NULL, "dcs_url" varchar(200) NOT NULL, "gcm_sender_id" varchar(64) NOT NULL, "start_time" integer CHECK ("start_time" >= 0) NOT NULL, "max_tour_time" integer CHECK ("max_tour_time" >= 0) NOT NULL, "is_cancelled" boolean NOT NULL, "tour_route_id" integer NULL);" with params "[]"
2013-11-03 23:12:38,549 [DEBUG] django.db.backends: (0.001) CREATE TABLE "tour_config_tourconfig" ("id" serial NOT NULL PRIMARY KEY, "tour_name" varchar(256) NOT NULL, "tour_logo" varchar(200) NOT NULL, "tour_id" varchar(64) NOT NULL UNIQUE, "tour_organization" varchar(256) NOT NULL, "dcs_url" varchar(200) NOT NULL, "gcm_sender_id" varchar(64) NOT NULL, "start_time" integer CHECK ("start_time" >= 0) NOT NULL, "max_tour_time" integer CHECK ("max_tour_time" >= 0) NOT NULL, "is_cancelled" boolean NOT NULL, "tour_route_id" integer NULL);; args=[]
2013-11-03 23:12:38,551 [DEBUG] django.db.backends: (0.001) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'tourconfig'  AND "django_content_type"."app_label" = 'tour_config' ); args=('tourconfig', u'tour_config')
2013-11-03 23:12:38,551 [DEBUG] django.db.backends: (0.000) SAVEPOINT s1221494016_x1; args=()
2013-11-03 23:12:38,552 [DEBUG] django.db.backends: (0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('tour', 'tour_config', 'tourconfig') RETURNING "django_content_type"."id"; args=(u'tour', u'tour_config', 'tourconfig')
2013-11-03 23:12:38,554 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'tourroute'  AND "django_content_type"."app_label" = 'tour_config' ); args=('tourroute', u'tour_config')
2013-11-03 23:12:38,554 [DEBUG] django.db.backends: (0.000) SAVEPOINT s1221494016_x1; args=()
2013-11-03 23:12:38,554 [DEBUG] django.db.backends: (0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('tour route', 'tour_config', 'tourroute') RETURNING "django_content_type"."id"; args=(u'tour route', u'tour_config', 'tourroute')
2013-11-03 23:12:38,557 [DEBUG] django.db.backends: (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (9, 10) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(9, 10)
2013-11-03 23:12:38,558 [DEBUG] django.db.backends: (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add tour', 9, 'add_tourconfig'), ('Can change tour', 9, 'change_tourconfig'), ('Can delete tour', 9, 'delete_tourconfig'), ('Can add tour route', 10, 'add_tourroute'), ('Can change tour route', 10, 'change_tourroute'), ('Can delete tour route', 10, 'delete_tourroute'); args=(u'Can add tour', 9, u'add_tourconfig', u'Can change tour', 9, u'change_tourconfig', u'Can delete tour', 9, u'delete_tourconfig', u'Can add tour route', 10, u'add_tourroute', u'Can change tour route', 10, u'change_tourroute', u'Can delete tour route', 10, u'delete_tourroute')
2013-11-03 23:12:38,559 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'tour_config'  ORDER BY "django_content_type"."name" ASC; args=(u'tour_config',)
2013-11-03 23:13:36,487 [DEBUG] django.db.backends: (0.001) SELECT "south_migrationhistory"."id", "south_migrationhistory"."app_name", "south_migrationhistory"."migration", "south_migrationhistory"."applied" FROM "south_migrationhistory" WHERE "south_migrationhistory"."applied" IS NOT NULL ORDER BY "south_migrationhistory"."applied" ASC; args=()
2013-11-03 23:13:36,491 [DEBUG] django.db.backends: (0.001) SELECT "south_migrationhistory"."id", "south_migrationhistory"."app_name", "south_migrationhistory"."migration", "south_migrationhistory"."applied" FROM "south_migrationhistory" WHERE ("south_migrationhistory"."app_name" = 'tour_config'  AND "south_migrationhistory"."migration" = '0007_initial' ); args=('tour_config', '0007_initial')
2013-11-03 23:13:36,491 [DEBUG] django.db.backends: (0.000) INSERT INTO "south_migrationhistory" ("app_name", "migration", "applied") VALUES ('tour_config', '0007_initial', '2013-11-04 04:13:36.491361+00:00') RETURNING "south_migrationhistory"."id"; args=('tour_config', '0007_initial', u'2013-11-04 04:13:36.491361+00:00')
2013-11-03 23:13:36,494 [DEBUG] django.db.backends: (0.000) SELECT "south_migrationhistory"."id", "south_migrationhistory"."app_name", "south_migrationhistory"."migration", "south_migrationhistory"."applied" FROM "south_migrationhistory" WHERE ("south_migrationhistory"."app_name" = 'tour_config'  AND "south_migrationhistory"."migration" = '0008_initial' ); args=('tour_config', '0008_initial')
2013-11-03 23:13:36,494 [DEBUG] django.db.backends: (0.000) INSERT INTO "south_migrationhistory" ("app_name", "migration", "applied") VALUES ('tour_config', '0008_initial', '2013-11-04 04:13:36.494274+00:00') RETURNING "south_migrationhistory"."id"; args=('tour_config', '0008_initial', u'2013-11-04 04:13:36.494274+00:00')
2013-11-03 23:13:36,496 [DEBUG] django.db.backends: (0.000) SELECT "south_migrationhistory"."id", "south_migrationhistory"."app_name", "south_migrationhistory"."migration", "south_migrationhistory"."applied" FROM "south_migrationhistory" WHERE ("south_migrationhistory"."app_name" = 'tour_config'  AND "south_migrationhistory"."migration" = '0009_initial' ); args=('tour_config', '0009_initial')
2013-11-03 23:13:36,497 [DEBUG] django.db.backends: (0.000) INSERT INTO "south_migrationhistory" ("app_name", "migration", "applied") VALUES ('tour_config', '0009_initial', '2013-11-04 04:13:36.496653+00:00') RETURNING "south_migrationhistory"."id"; args=('tour_config', '0009_initial', u'2013-11-04 04:13:36.496653+00:00')
2013-11-03 23:14:30,871 [DEBUG] django.db.backends: (0.001) SELECT "south_migrationhistory"."id", "south_migrationhistory"."app_name", "south_migrationhistory"."migration", "south_migrationhistory"."applied" FROM "south_migrationhistory" WHERE "south_migrationhistory"."applied" IS NOT NULL ORDER BY "south_migrationhistory"."applied" ASC; args=()
2013-11-03 23:14:30,879 [DEBUG] django.db.backends: (0.000) SET CONSTRAINTS ALL IMMEDIATE; args=()
2013-11-03 23:14:30,879 [DEBUG] django.db.backends: (0.000) SET CONSTRAINTS ALL DEFERRED; args=()
2013-11-03 23:16:11,249 [DEBUG] django.db.backends: (0.003) 
            SELECT c.relname
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('r', 'v', '')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid); args=()
2013-11-03 23:16:11,252 [DEBUG] django.db.backends: (0.001) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'permission'  AND "django_content_type"."app_label" = 'auth' ); args=('permission', u'auth')
2013-11-03 23:16:11,253 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'group'  AND "django_content_type"."app_label" = 'auth' ); args=('group', u'auth')
2013-11-03 23:16:11,254 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'user'  AND "django_content_type"."app_label" = 'auth' ); args=('user', u'auth')
2013-11-03 23:16:11,256 [DEBUG] django.db.backends: (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1, 2, 3) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1, 2, 3)
2013-11-03 23:16:11,257 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'  ORDER BY "django_content_type"."name" ASC; args=(u'auth',)
2013-11-03 23:16:11,258 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'contenttype'  AND "django_content_type"."app_label" = 'contenttypes' ); args=('contenttype', u'contenttypes')
2013-11-03 23:16:11,259 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(4,)
2013-11-03 23:16:11,260 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'  ORDER BY "django_content_type"."name" ASC; args=(u'contenttypes',)
2013-11-03 23:16:11,261 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'session'  AND "django_content_type"."app_label" = 'sessions' ); args=('session', u'sessions')
2013-11-03 23:16:11,263 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,)
2013-11-03 23:16:11,263 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'  ORDER BY "django_content_type"."name" ASC; args=(u'sessions',)
2013-11-03 23:16:11,264 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'site'  AND "django_content_type"."app_label" = 'sites' ); args=('site', u'sites')
2013-11-03 23:16:11,266 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,)
2013-11-03 23:16:11,266 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sites'  ORDER BY "django_content_type"."name" ASC; args=(u'sites',)
2013-11-03 23:16:11,270 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'migrationhistory'  AND "django_content_type"."app_label" = 'south' ); args=('migrationhistory', u'south')
2013-11-03 23:16:11,271 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(7,)
2013-11-03 23:16:11,272 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'south'  ORDER BY "django_content_type"."name" ASC; args=(u'south',)
2013-11-03 23:16:11,273 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'logentry'  AND "django_content_type"."app_label" = 'admin' ); args=('logentry', u'admin')
2013-11-03 23:16:11,275 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8,)
2013-11-03 23:16:11,275 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'  ORDER BY "django_content_type"."name" ASC; args=(u'admin',)
2013-11-03 23:16:11,283 [DEBUG] django.db.backends: (0.000) SET CONSTRAINTS ALL IMMEDIATE; args=()
2013-11-03 23:16:11,283 [DEBUG] django.db.backends: (0.000) SET CONSTRAINTS ALL DEFERRED; args=()
2013-11-03 23:16:21,652 [DEBUG] django.db.backends: (0.001) SELECT "south_migrationhistory"."id", "south_migrationhistory"."app_name", "south_migrationhistory"."migration", "south_migrationhistory"."applied" FROM "south_migrationhistory" WHERE "south_migrationhistory"."applied" IS NOT NULL ORDER BY "south_migrationhistory"."applied" ASC; args=()
2013-11-03 23:16:21,660 [DEBUG] django.db.backends: (0.000) SET CONSTRAINTS ALL IMMEDIATE; args=()
2013-11-03 23:16:21,660 [DEBUG] django.db.backends: (0.000) SET CONSTRAINTS ALL DEFERRED; args=()
